function cov_28u9ed2v2k(){var path="/Users/abhis/Documents/python/splunk-sdk-javascript/contrib/commander.js";var hash="013a8f894fb55b917b86396da42520ceeba2c967";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/abhis/Documents/python/splunk-sdk-javascript/contrib/commander.js",statementMap:{"0":{start:{line:11,column:11},end:{line:11,column:26}},"1":{start:{line:12,column:9},end:{line:12,column:22}},"2":{start:{line:15,column:0},end:{line:49,column:1}},"3":{start:{line:16,column:21},end:{line:16,column:31}},"4":{start:{line:17,column:2},end:{line:48,column:3}},"5":{start:{line:18,column:4},end:{line:24,column:5}},"6":{start:{line:19,column:20},end:{line:19,column:22}},"7":{start:{line:20,column:6},end:{line:22,column:7}},"8":{start:{line:20,column:19},end:{line:20,column:20}},"9":{start:{line:21,column:8},end:{line:21,column:49}},"10":{start:{line:23,column:6},end:{line:23,column:31}},"11":{start:{line:26,column:12},end:{line:26,column:13}},"12":{start:{line:27,column:15},end:{line:27,column:24}},"13":{start:{line:28,column:14},end:{line:28,column:25}},"14":{start:{line:29,column:14},end:{line:39,column:6}},"15":{start:{line:30,column:6},end:{line:30,column:29}},"16":{start:{line:30,column:20},end:{line:30,column:29}},"17":{start:{line:31,column:6},end:{line:38,column:7}},"18":{start:{line:32,column:19},end:{line:32,column:44}},"19":{start:{line:33,column:19},end:{line:33,column:44}},"20":{start:{line:34,column:19},end:{line:34,column:52}},"21":{start:{line:35,column:19},end:{line:35,column:30}},"22":{start:{line:37,column:10},end:{line:37,column:19}},"23":{start:{line:40,column:4},end:{line:46,column:5}},"24":{start:{line:40,column:17},end:{line:40,column:24}},"25":{start:{line:41,column:6},end:{line:45,column:7}},"26":{start:{line:42,column:8},end:{line:42,column:23}},"27":{start:{line:44,column:8},end:{line:44,column:37}},"28":{start:{line:47,column:4},end:{line:47,column:15}},"29":{start:{line:51,column:19},end:{line:66,column:1}},"30":{start:{line:52,column:2},end:{line:54,column:3}},"31":{start:{line:53,column:4},end:{line:53,column:32}},"32":{start:{line:55,column:2},end:{line:65,column:3}},"33":{start:{line:56,column:17},end:{line:56,column:18}},"34":{start:{line:57,column:4},end:{line:64,column:35}},"35":{start:{line:58,column:6},end:{line:63,column:7}},"36":{start:{line:59,column:18},end:{line:59,column:38}},"37":{start:{line:60,column:8},end:{line:60,column:75}},"38":{start:{line:72,column:19},end:{line:72,column:49}},"39":{start:{line:73,column:11},end:{line:73,column:26}},"40":{start:{line:74,column:10},end:{line:74,column:24}},"41":{start:{line:75,column:15},end:{line:75,column:28}},"42":{start:{line:81,column:0},end:{line:81,column:39}},"43":{start:{line:87,column:0},end:{line:87,column:26}},"44":{start:{line:93,column:0},end:{line:93,column:24}},"45":{start:{line:104,column:2},end:{line:104,column:21}},"46":{start:{line:105,column:2},end:{line:105,column:38}},"47":{start:{line:106,column:2},end:{line:106,column:38}},"48":{start:{line:107,column:2},end:{line:107,column:38}},"49":{start:{line:108,column:2},end:{line:108,column:32}},"50":{start:{line:109,column:2},end:{line:109,column:78}},"51":{start:{line:109,column:51},end:{line:109,column:78}},"52":{start:{line:110,column:2},end:{line:110,column:28}},"53":{start:{line:111,column:2},end:{line:111,column:33}},"54":{start:{line:121,column:0},end:{line:125,column:2}},"55":{start:{line:122,column:2},end:{line:124,column:24}},"56":{start:{line:135,column:0},end:{line:138,column:2}},"57":{start:{line:136,column:2},end:{line:137,column:24}},"58":{start:{line:148,column:2},end:{line:148,column:21}},"59":{start:{line:149,column:2},end:{line:149,column:20}},"60":{start:{line:150,column:2},end:{line:150,column:17}},"61":{start:{line:151,column:2},end:{line:151,column:19}},"62":{start:{line:152,column:2},end:{line:152,column:17}},"63":{start:{line:159,column:0},end:{line:159,column:53}},"64":{start:{line:209,column:0},end:{line:216,column:2}},"65":{start:{line:210,column:13},end:{line:210,column:29}},"66":{start:{line:211,column:12},end:{line:211,column:37}},"67":{start:{line:212,column:2},end:{line:212,column:26}},"68":{start:{line:213,column:2},end:{line:213,column:30}},"69":{start:{line:214,column:2},end:{line:214,column:20}},"70":{start:{line:215,column:2},end:{line:215,column:13}},"71":{start:{line:228,column:0},end:{line:242,column:2}},"72":{start:{line:229,column:2},end:{line:229,column:27}},"73":{start:{line:229,column:20},end:{line:229,column:27}},"74":{start:{line:230,column:13},end:{line:230,column:17}},"75":{start:{line:231,column:2},end:{line:240,column:5}},"76":{start:{line:232,column:4},end:{line:239,column:5}},"77":{start:{line:234,column:8},end:{line:234,column:67}},"78":{start:{line:235,column:8},end:{line:235,column:14}},"79":{start:{line:237,column:8},end:{line:237,column:68}},"80":{start:{line:238,column:8},end:{line:238,column:14}},"81":{start:{line:241,column:2},end:{line:241,column:14}},"82":{start:{line:261,column:0},end:{line:311,column:2}},"83":{start:{line:262,column:13},end:{line:262,column:17}},"84":{start:{line:263,column:2},end:{line:309,column:5}},"85":{start:{line:265,column:4},end:{line:265,column:24}},"86":{start:{line:267,column:4},end:{line:267,column:28}},"87":{start:{line:268,column:17},end:{line:268,column:43}},"88":{start:{line:271,column:4},end:{line:271,column:48}},"89":{start:{line:276,column:4},end:{line:278,column:5}},"90":{start:{line:277,column:6},end:{line:277,column:44}},"91":{start:{line:282,column:4},end:{line:288,column:7}},"92":{start:{line:283,column:18},end:{line:283,column:31}},"93":{start:{line:284,column:17},end:{line:284,column:33}},"94":{start:{line:285,column:6},end:{line:287,column:7}},"95":{start:{line:286,column:8},end:{line:286,column:35}},"96":{start:{line:290,column:4},end:{line:294,column:7}},"97":{start:{line:291,column:6},end:{line:293,column:7}},"98":{start:{line:292,column:8},end:{line:292,column:39}},"99":{start:{line:302,column:4},end:{line:306,column:5}},"100":{start:{line:303,column:6},end:{line:303,column:36}},"101":{start:{line:305,column:6},end:{line:305,column:22}},"102":{start:{line:308,column:4},end:{line:308,column:25}},"103":{start:{line:310,column:2},end:{line:310,column:14}},"104":{start:{line:362,column:0},end:{line:407,column:2}},"105":{start:{line:363,column:13},end:{line:363,column:17}},"106":{start:{line:364,column:15},end:{line:364,column:45}},"107":{start:{line:365,column:14},end:{line:365,column:27}},"108":{start:{line:366,column:13},end:{line:366,column:29}},"109":{start:{line:369,column:2},end:{line:369,column:87}},"110":{start:{line:369,column:31},end:{line:369,column:87}},"111":{start:{line:372,column:2},end:{line:377,column:3}},"112":{start:{line:374,column:4},end:{line:374,column:50}},"113":{start:{line:374,column:30},end:{line:374,column:50}},"114":{start:{line:376,column:4},end:{line:376,column:62}},"115":{start:{line:376,column:36},end:{line:376,column:62}},"116":{start:{line:379,column:2},end:{line:379,column:41}},"117":{start:{line:382,column:2},end:{line:382,column:28}},"118":{start:{line:386,column:2},end:{line:404,column:5}},"119":{start:{line:388,column:4},end:{line:388,column:41}},"120":{start:{line:388,column:27},end:{line:388,column:41}},"121":{start:{line:391,column:4},end:{line:403,column:5}},"122":{start:{line:393,column:6},end:{line:399,column:7}},"123":{start:{line:394,column:8},end:{line:396,column:18}},"124":{start:{line:398,column:8},end:{line:398,column:43}},"125":{start:{line:400,column:11},end:{line:403,column:5}},"126":{start:{line:402,column:6},end:{line:402,column:41}},"127":{start:{line:406,column:2},end:{line:406,column:14}},"128":{start:{line:417,column:0},end:{line:428,column:2}},"129":{start:{line:419,column:2},end:{line:419,column:22}},"130":{start:{line:422,column:2},end:{line:422,column:48}},"131":{start:{line:422,column:18},end:{line:422,column:48}},"132":{start:{line:425,column:15},end:{line:425,column:63}},"133":{start:{line:426,column:2},end:{line:426,column:26}},"134":{start:{line:427,column:2},end:{line:427,column:68}},"135":{start:{line:439,column:0},end:{line:455,column:2}},"136":{start:{line:440,column:12},end:{line:440,column:14}},"137":{start:{line:443,column:2},end:{line:452,column:3}},"138":{start:{line:443,column:15},end:{line:443,column:16}},"139":{start:{line:443,column:24},end:{line:443,column:35}},"140":{start:{line:444,column:4},end:{line:444,column:18}},"141":{start:{line:445,column:4},end:{line:451,column:5}},"142":{start:{line:446,column:6},end:{line:448,column:9}},"143":{start:{line:447,column:8},end:{line:447,column:26}},"144":{start:{line:450,column:6},end:{line:450,column:20}},"145":{start:{line:454,column:2},end:{line:454,column:13}},"146":{start:{line:469,column:0},end:{line:506,column:2}},"147":{start:{line:470,column:13},end:{line:470,column:26}},"148":{start:{line:471,column:12},end:{line:471,column:23}},"149":{start:{line:472,column:13},end:{line:472,column:17}},"150":{start:{line:475,column:2},end:{line:503,column:3}},"151":{start:{line:476,column:4},end:{line:476,column:19}},"152":{start:{line:477,column:4},end:{line:484,column:5}},"153":{start:{line:478,column:24},end:{line:478,column:36}},"154":{start:{line:479,column:6},end:{line:479,column:41}},"155":{start:{line:480,column:6},end:{line:480,column:44}},"156":{start:{line:482,column:6},end:{line:482,column:33}},"157":{start:{line:483,column:6},end:{line:483,column:27}},"158":{start:{line:486,column:4},end:{line:486,column:41}},"159":{start:{line:490,column:4},end:{line:492,column:5}},"160":{start:{line:491,column:6},end:{line:491,column:37}},"161":{start:{line:496,column:4},end:{line:502,column:7}},"162":{start:{line:497,column:18},end:{line:497,column:31}},"163":{start:{line:498,column:17},end:{line:498,column:33}},"164":{start:{line:499,column:6},end:{line:501,column:7}},"165":{start:{line:500,column:8},end:{line:500,column:35}},"166":{start:{line:505,column:2},end:{line:505,column:14}},"167":{start:{line:516,column:0},end:{line:522,column:2}},"168":{start:{line:517,column:2},end:{line:521,column:3}},"169":{start:{line:517,column:15},end:{line:517,column:16}},"170":{start:{line:517,column:24},end:{line:517,column:43}},"171":{start:{line:518,column:4},end:{line:520,column:5}},"172":{start:{line:519,column:6},end:{line:519,column:29}},"173":{start:{line:533,column:0},end:{line:607,column:2}},"174":{start:{line:534,column:13},end:{line:534,column:15}},"175":{start:{line:535,column:12},end:{line:535,column:23}},"176":{start:{line:540,column:23},end:{line:540,column:25}},"177":{start:{line:541,column:17},end:{line:541,column:19}},"178":{start:{line:544,column:2},end:{line:604,column:3}},"179":{start:{line:544,column:15},end:{line:544,column:16}},"180":{start:{line:545,column:4},end:{line:545,column:18}},"181":{start:{line:548,column:4},end:{line:551,column:5}},"182":{start:{line:549,column:6},end:{line:549,column:21}},"183":{start:{line:550,column:6},end:{line:550,column:15}},"184":{start:{line:553,column:4},end:{line:556,column:5}},"185":{start:{line:554,column:6},end:{line:554,column:21}},"186":{start:{line:555,column:6},end:{line:555,column:15}},"187":{start:{line:559,column:4},end:{line:559,column:33}},"188":{start:{line:562,column:4},end:{line:587,column:5}},"189":{start:{line:563,column:6},end:{line:565,column:7}},"190":{start:{line:564,column:8},end:{line:564,column:39}},"191":{start:{line:568,column:6},end:{line:585,column:7}},"192":{start:{line:569,column:8},end:{line:569,column:24}},"193":{start:{line:570,column:8},end:{line:570,column:67}},"194":{start:{line:570,column:25},end:{line:570,column:67}},"195":{start:{line:571,column:8},end:{line:571,column:74}},"196":{start:{line:571,column:27},end:{line:571,column:74}},"197":{start:{line:572,column:8},end:{line:572,column:38}},"198":{start:{line:574,column:13},end:{line:585,column:7}},"199":{start:{line:575,column:8},end:{line:575,column:24}},"200":{start:{line:576,column:8},end:{line:580,column:9}},"201":{start:{line:577,column:10},end:{line:577,column:21}},"202":{start:{line:579,column:10},end:{line:579,column:14}},"203":{start:{line:581,column:8},end:{line:581,column:38}},"204":{start:{line:584,column:8},end:{line:584,column:33}},"205":{start:{line:586,column:6},end:{line:586,column:15}},"206":{start:{line:590,column:4},end:{line:600,column:5}},"207":{start:{line:591,column:6},end:{line:591,column:31}},"208":{start:{line:596,column:6},end:{line:598,column:7}},"209":{start:{line:597,column:8},end:{line:597,column:39}},"210":{start:{line:599,column:6},end:{line:599,column:15}},"211":{start:{line:603,column:4},end:{line:603,column:19}},"212":{start:{line:606,column:2},end:{line:606,column:69}},"213":{start:{line:616,column:0},end:{line:621,column:2}},"214":{start:{line:617,column:2},end:{line:617,column:18}},"215":{start:{line:618,column:2},end:{line:618,column:65}},"216":{start:{line:619,column:2},end:{line:619,column:18}},"217":{start:{line:620,column:2},end:{line:620,column:18}},"218":{start:{line:631,column:0},end:{line:640,column:2}},"219":{start:{line:632,column:2},end:{line:632,column:18}},"220":{start:{line:633,column:2},end:{line:637,column:3}},"221":{start:{line:634,column:4},end:{line:634,column:89}},"222":{start:{line:636,column:4},end:{line:636,column:73}},"223":{start:{line:638,column:2},end:{line:638,column:18}},"224":{start:{line:639,column:2},end:{line:639,column:18}},"225":{start:{line:650,column:0},end:{line:655,column:2}},"226":{start:{line:651,column:2},end:{line:651,column:18}},"227":{start:{line:652,column:2},end:{line:652,column:66}},"228":{start:{line:653,column:2},end:{line:653,column:18}},"229":{start:{line:654,column:2},end:{line:654,column:18}},"230":{start:{line:664,column:0},end:{line:669,column:2}},"231":{start:{line:665,column:2},end:{line:665,column:18}},"232":{start:{line:666,column:2},end:{line:666,column:54}},"233":{start:{line:667,column:2},end:{line:667,column:18}},"234":{start:{line:668,column:2},end:{line:668,column:18}},"235":{start:{line:683,column:0},end:{line:693,column:2}},"236":{start:{line:684,column:2},end:{line:684,column:50}},"237":{start:{line:684,column:29},end:{line:684,column:50}},"238":{start:{line:685,column:2},end:{line:685,column:22}},"239":{start:{line:686,column:2},end:{line:686,column:35}},"240":{start:{line:687,column:2},end:{line:687,column:50}},"241":{start:{line:688,column:2},end:{line:691,column:5}},"242":{start:{line:689,column:4},end:{line:689,column:21}},"243":{start:{line:690,column:4},end:{line:690,column:20}},"244":{start:{line:692,column:2},end:{line:692,column:14}},"245":{start:{line:703,column:0},end:{line:707,column:2}},"246":{start:{line:704,column:2},end:{line:704,column:54}},"247":{start:{line:704,column:29},end:{line:704,column:54}},"248":{start:{line:705,column:2},end:{line:705,column:26}},"249":{start:{line:706,column:2},end:{line:706,column:14}},"250":{start:{line:717,column:0},end:{line:732,column:2}},"251":{start:{line:718,column:13},end:{line:722,column:4}},"252":{start:{line:719,column:4},end:{line:721,column:29}},"253":{start:{line:724,column:14},end:{line:727,column:42}},"254":{start:{line:728,column:2},end:{line:728,column:57}},"255":{start:{line:728,column:29},end:{line:728,column:57}},"256":{start:{line:729,column:2},end:{line:729,column:20}},"257":{start:{line:731,column:2},end:{line:731,column:14}},"258":{start:{line:741,column:0},end:{line:745,column:2}},"259":{start:{line:742,column:2},end:{line:744,column:8}},"260":{start:{line:743,column:4},end:{line:743,column:46}},"261":{start:{line:754,column:0},end:{line:764,column:2}},"262":{start:{line:755,column:14},end:{line:755,column:40}},"263":{start:{line:758,column:2},end:{line:763,column:16}},"264":{start:{line:760,column:6},end:{line:761,column:36}},"265":{start:{line:773,column:0},end:{line:796,column:2}},"266":{start:{line:774,column:2},end:{line:774,column:39}},"267":{start:{line:774,column:29},end:{line:774,column:39}},"268":{start:{line:775,column:2},end:{line:795,column:15}},"269":{start:{line:780,column:17},end:{line:784,column:18}},"270":{start:{line:781,column:8},end:{line:783,column:33}},"271":{start:{line:786,column:6},end:{line:792,column:16}},"272":{start:{line:805,column:0},end:{line:816,column:2}},"273":{start:{line:806,column:2},end:{line:815,column:15}},"274":{start:{line:826,column:0},end:{line:833,column:2}},"275":{start:{line:827,column:13},end:{line:827,column:17}},"276":{start:{line:828,column:2},end:{line:832,column:5}},"277":{start:{line:829,column:4},end:{line:829,column:22}},"278":{start:{line:830,column:4},end:{line:830,column:91}},"279":{start:{line:830,column:20},end:{line:830,column:91}},"280":{start:{line:831,column:4},end:{line:831,column:12}},"281":{start:{line:843,column:0},end:{line:850,column:2}},"282":{start:{line:844,column:13},end:{line:844,column:17}},"283":{start:{line:845,column:2},end:{line:849,column:5}},"284":{start:{line:846,column:4},end:{line:846,column:24}},"285":{start:{line:847,column:4},end:{line:847,column:97}},"286":{start:{line:847,column:30},end:{line:847,column:97}},"287":{start:{line:848,column:4},end:{line:848,column:12}},"288":{start:{line:860,column:0},end:{line:870,column:2}},"289":{start:{line:861,column:2},end:{line:863,column:3}},"290":{start:{line:862,column:4},end:{line:862,column:66}},"291":{start:{line:865,column:2},end:{line:865,column:28}},"292":{start:{line:866,column:2},end:{line:866,column:36}},"293":{start:{line:867,column:2},end:{line:869,column:14}},"294":{start:{line:868,column:4},end:{line:868,column:19}},"295":{start:{line:880,column:0},end:{line:892,column:2}},"296":{start:{line:881,column:12},end:{line:881,column:14}},"297":{start:{line:882,column:2},end:{line:882,column:19}},"298":{start:{line:883,column:2},end:{line:883,column:36}},"299":{start:{line:884,column:2},end:{line:891,column:14}},"300":{start:{line:885,column:4},end:{line:890,column:5}},"301":{start:{line:886,column:6},end:{line:886,column:47}},"302":{start:{line:887,column:6},end:{line:887,column:25}},"303":{start:{line:889,column:6},end:{line:889,column:32}},"304":{start:{line:918,column:0},end:{line:921,column:2}},"305":{start:{line:919,column:2},end:{line:919,column:74}},"306":{start:{line:919,column:22},end:{line:919,column:74}},"307":{start:{line:920,column:2},end:{line:920,column:32}},"308":{start:{line:947,column:0},end:{line:979,column:2}},"309":{start:{line:948,column:13},end:{line:948,column:17}},"310":{start:{line:949,column:12},end:{line:949,column:14}},"311":{start:{line:952,column:2},end:{line:955,column:3}},"312":{start:{line:953,column:4},end:{line:953,column:14}},"313":{start:{line:954,column:4},end:{line:954,column:14}},"314":{start:{line:957,column:2},end:{line:957,column:23}},"315":{start:{line:958,column:2},end:{line:958,column:28}},"316":{start:{line:961,column:2},end:{line:978,column:14}},"317":{start:{line:962,column:4},end:{line:969,column:5}},"318":{start:{line:963,column:6},end:{line:963,column:20}},"319":{start:{line:964,column:6},end:{line:964,column:51}},"320":{start:{line:965,column:6},end:{line:965,column:28}},"321":{start:{line:966,column:6},end:{line:966,column:66}},"322":{start:{line:966,column:30},end:{line:966,column:66}},"323":{start:{line:967,column:6},end:{line:967,column:14}},"324":{start:{line:968,column:6},end:{line:968,column:13}},"325":{start:{line:971,column:4},end:{line:974,column:5}},"326":{start:{line:972,column:6},end:{line:972,column:29}},"327":{start:{line:973,column:6},end:{line:973,column:21}},"328":{start:{line:976,column:4},end:{line:976,column:31}},"329":{start:{line:977,column:4},end:{line:977,column:13}},"330":{start:{line:997,column:0},end:{line:1005,column:2}},"331":{start:{line:998,column:13},end:{line:998,column:17}},"332":{start:{line:999,column:2},end:{line:1004,column:5}},"333":{start:{line:1000,column:4},end:{line:1002,column:5}},"334":{start:{line:1001,column:6},end:{line:1001,column:35}},"335":{start:{line:1003,column:4},end:{line:1003,column:22}},"336":{start:{line:1025,column:0},end:{line:1044,column:2}},"337":{start:{line:1026,column:13},end:{line:1026,column:17}},"338":{start:{line:1028,column:2},end:{line:1030,column:5}},"339":{start:{line:1029,column:4},end:{line:1029,column:41}},"340":{start:{line:1033,column:4},end:{line:1040,column:7}},"341":{start:{line:1034,column:6},end:{line:1034,column:34}},"342":{start:{line:1035,column:6},end:{line:1039,column:7}},"343":{start:{line:1036,column:8},end:{line:1036,column:16}},"344":{start:{line:1038,column:8},end:{line:1038,column:27}},"345":{start:{line:1043,column:2},end:{line:1043,column:10}},"346":{start:{line:1055,column:2},end:{line:1057,column:5}},"347":{start:{line:1056,column:4},end:{line:1056,column:55}},"348":{start:{line:1069,column:2},end:{line:1069,column:38}},"349":{start:{line:1082,column:12},end:{line:1082,column:43}},"350":{start:{line:1083,column:2},end:{line:1083,column:40}},"351":{start:{line:1095,column:2},end:{line:1095,column:26}},"352":{start:{line:1096,column:2},end:{line:1107,column:3}},"353":{start:{line:1096,column:15},end:{line:1096,column:16}},"354":{start:{line:1097,column:4},end:{line:1104,column:5}},"355":{start:{line:1098,column:6},end:{line:1102,column:9}},"356":{start:{line:1099,column:8},end:{line:1099,column:44}},"357":{start:{line:1100,column:8},end:{line:1100,column:27}},"358":{start:{line:1101,column:8},end:{line:1101,column:25}},"359":{start:{line:1103,column:6},end:{line:1103,column:21}},"360":{start:{line:1106,column:4},end:{line:1106,column:16}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:16},end:{line:17,column:17}},loc:{start:{line:17,column:28},end:{line:48,column:3}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:46},end:{line:29,column:47}},loc:{start:{line:29,column:58},end:{line:39,column:5}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:51,column:19},end:{line:51,column:20}},loc:{start:{line:51,column:34},end:{line:66,column:1}},line:51},"3":{name:"Option",decl:{start:{line:103,column:9},end:{line:103,column:15}},loc:{start:{line:103,column:36},end:{line:112,column:1}},line:103},"4":{name:"(anonymous_4)",decl:{start:{line:121,column:24},end:{line:121,column:25}},loc:{start:{line:121,column:34},end:{line:125,column:1}},line:121},"5":{name:"(anonymous_5)",decl:{start:{line:135,column:22},end:{line:135,column:23}},loc:{start:{line:135,column:35},end:{line:138,column:1}},line:135},"6":{name:"Command",decl:{start:{line:147,column:9},end:{line:147,column:16}},loc:{start:{line:147,column:23},end:{line:153,column:1}},line:147},"7":{name:"(anonymous_7)",decl:{start:{line:209,column:28},end:{line:209,column:29}},loc:{start:{line:209,column:42},end:{line:216,column:1}},line:209},"8":{name:"(anonymous_8)",decl:{start:{line:228,column:38},end:{line:228,column:39}},loc:{start:{line:228,column:52},end:{line:242,column:1}},line:228},"9":{name:"(anonymous_9)",decl:{start:{line:231,column:15},end:{line:231,column:16}},loc:{start:{line:231,column:28},end:{line:240,column:3}},line:231},"10":{name:"(anonymous_10)",decl:{start:{line:261,column:27},end:{line:261,column:28}},loc:{start:{line:261,column:39},end:{line:311,column:1}},line:261},"11":{name:"(anonymous_11)",decl:{start:{line:263,column:28},end:{line:263,column:29}},loc:{start:{line:263,column:51},end:{line:309,column:3}},line:263},"12":{name:"(anonymous_12)",decl:{start:{line:282,column:25},end:{line:282,column:26}},loc:{start:{line:282,column:45},end:{line:288,column:5}},line:282},"13":{name:"(anonymous_13)",decl:{start:{line:290,column:22},end:{line:290,column:23}},loc:{start:{line:290,column:38},end:{line:294,column:5}},line:290},"14":{name:"(anonymous_14)",decl:{start:{line:362,column:27},end:{line:362,column:28}},loc:{start:{line:362,column:85},end:{line:407,column:1}},line:362},"15":{name:"(anonymous_15)",decl:{start:{line:386,column:17},end:{line:386,column:18}},loc:{start:{line:386,column:30},end:{line:404,column:3}},line:386},"16":{name:"(anonymous_16)",decl:{start:{line:417,column:26},end:{line:417,column:27}},loc:{start:{line:417,column:40},end:{line:428,column:1}},line:417},"17":{name:"(anonymous_17)",decl:{start:{line:439,column:30},end:{line:439,column:31}},loc:{start:{line:439,column:44},end:{line:455,column:1}},line:439},"18":{name:"(anonymous_18)",decl:{start:{line:446,column:37},end:{line:446,column:38}},loc:{start:{line:446,column:48},end:{line:448,column:7}},line:446},"19":{name:"(anonymous_19)",decl:{start:{line:469,column:30},end:{line:469,column:31}},loc:{start:{line:469,column:63},end:{line:506,column:1}},line:469},"20":{name:"(anonymous_20)",decl:{start:{line:496,column:25},end:{line:496,column:26}},loc:{start:{line:496,column:45},end:{line:502,column:5}},line:496},"21":{name:"(anonymous_21)",decl:{start:{line:516,column:30},end:{line:516,column:31}},loc:{start:{line:516,column:43},end:{line:522,column:1}},line:516},"22":{name:"(anonymous_22)",decl:{start:{line:533,column:33},end:{line:533,column:34}},loc:{start:{line:533,column:47},end:{line:607,column:1}},line:533},"23":{name:"(anonymous_23)",decl:{start:{line:616,column:36},end:{line:616,column:37}},loc:{start:{line:616,column:50},end:{line:621,column:1}},line:616},"24":{name:"(anonymous_24)",decl:{start:{line:631,column:42},end:{line:631,column:43}},loc:{start:{line:631,column:64},end:{line:640,column:1}},line:631},"25":{name:"(anonymous_25)",decl:{start:{line:650,column:34},end:{line:650,column:35}},loc:{start:{line:650,column:50},end:{line:655,column:1}},line:650},"26":{name:"(anonymous_26)",decl:{start:{line:664,column:34},end:{line:664,column:35}},loc:{start:{line:664,column:48},end:{line:669,column:1}},line:664},"27":{name:"(anonymous_27)",decl:{start:{line:683,column:28},end:{line:683,column:29}},loc:{start:{line:683,column:48},end:{line:693,column:1}},line:683},"28":{name:"(anonymous_28)",decl:{start:{line:688,column:21},end:{line:688,column:22}},loc:{start:{line:688,column:31},end:{line:691,column:3}},line:688},"29":{name:"(anonymous_29)",decl:{start:{line:703,column:32},end:{line:703,column:33}},loc:{start:{line:703,column:45},end:{line:707,column:1}},line:703},"30":{name:"(anonymous_30)",decl:{start:{line:717,column:26},end:{line:717,column:27}},loc:{start:{line:717,column:39},end:{line:732,column:1}},line:717},"31":{name:"(anonymous_31)",decl:{start:{line:718,column:27},end:{line:718,column:28}},loc:{start:{line:718,column:40},end:{line:722,column:3}},line:718},"32":{name:"(anonymous_32)",decl:{start:{line:741,column:40},end:{line:741,column:41}},loc:{start:{line:741,column:50},end:{line:745,column:1}},line:741},"33":{name:"(anonymous_33)",decl:{start:{line:742,column:29},end:{line:742,column:30}},loc:{start:{line:742,column:50},end:{line:744,column:3}},line:742},"34":{name:"(anonymous_34)",decl:{start:{line:754,column:31},end:{line:754,column:32}},loc:{start:{line:754,column:41},end:{line:764,column:1}},line:754},"35":{name:"(anonymous_35)",decl:{start:{line:759,column:29},end:{line:759,column:30}},loc:{start:{line:759,column:45},end:{line:762,column:7}},line:759},"36":{name:"(anonymous_36)",decl:{start:{line:773,column:32},end:{line:773,column:33}},loc:{start:{line:773,column:42},end:{line:796,column:1}},line:773},"37":{name:"(anonymous_37)",decl:{start:{line:779,column:24},end:{line:779,column:25}},loc:{start:{line:779,column:37},end:{line:793,column:5}},line:779},"38":{name:"(anonymous_38)",decl:{start:{line:780,column:30},end:{line:780,column:31}},loc:{start:{line:780,column:43},end:{line:784,column:7}},line:780},"39":{name:"(anonymous_39)",decl:{start:{line:805,column:36},end:{line:805,column:37}},loc:{start:{line:805,column:46},end:{line:816,column:1}},line:805},"40":{name:"(anonymous_40)",decl:{start:{line:826,column:36},end:{line:826,column:37}},loc:{start:{line:826,column:53},end:{line:833,column:1}},line:826},"41":{name:"parseNumber",decl:{start:{line:828,column:38},end:{line:828,column:49}},loc:{start:{line:828,column:54},end:{line:832,column:3}},line:828},"42":{name:"(anonymous_42)",decl:{start:{line:843,column:34},end:{line:843,column:35}},loc:{start:{line:843,column:51},end:{line:850,column:1}},line:843},"43":{name:"parseDate",decl:{start:{line:845,column:38},end:{line:845,column:47}},loc:{start:{line:845,column:52},end:{line:849,column:3}},line:845},"44":{name:"(anonymous_44)",decl:{start:{line:860,column:37},end:{line:860,column:38}},loc:{start:{line:860,column:54},end:{line:870,column:1}},line:860},"45":{name:"(anonymous_45)",decl:{start:{line:867,column:29},end:{line:867,column:30}},loc:{start:{line:867,column:42},end:{line:869,column:3}},line:867},"46":{name:"(anonymous_46)",decl:{start:{line:880,column:36},end:{line:880,column:37}},loc:{start:{line:880,column:53},end:{line:892,column:1}},line:880},"47":{name:"(anonymous_47)",decl:{start:{line:884,column:27},end:{line:884,column:28}},loc:{start:{line:884,column:40},end:{line:891,column:3}},line:884},"48":{name:"(anonymous_48)",decl:{start:{line:918,column:27},end:{line:918,column:28}},loc:{start:{line:918,column:44},end:{line:921,column:1}},line:918},"49":{name:"(anonymous_49)",decl:{start:{line:947,column:29},end:{line:947,column:30}},loc:{start:{line:947,column:52},end:{line:979,column:1}},line:947},"50":{name:"(anonymous_50)",decl:{start:{line:961,column:31},end:{line:961,column:32}},loc:{start:{line:961,column:47},end:{line:978,column:3}},line:961},"51":{name:"(anonymous_51)",decl:{start:{line:997,column:28},end:{line:997,column:29}},loc:{start:{line:997,column:45},end:{line:1005,column:1}},line:997},"52":{name:"(anonymous_52)",decl:{start:{line:999,column:19},end:{line:999,column:20}},loc:{start:{line:999,column:31},end:{line:1004,column:3}},line:999},"53":{name:"(anonymous_53)",decl:{start:{line:1025,column:27},end:{line:1025,column:28}},loc:{start:{line:1025,column:45},end:{line:1044,column:1}},line:1025},"54":{name:"(anonymous_54)",decl:{start:{line:1028,column:15},end:{line:1028,column:16}},loc:{start:{line:1028,column:32},end:{line:1030,column:3}},line:1028},"55":{name:"again",decl:{start:{line:1032,column:11},end:{line:1032,column:16}},loc:{start:{line:1032,column:19},end:{line:1041,column:3}},line:1032},"56":{name:"(anonymous_56)",decl:{start:{line:1033,column:24},end:{line:1033,column:25}},loc:{start:{line:1033,column:37},end:{line:1040,column:5}},line:1033},"57":{name:"camelcase",decl:{start:{line:1054,column:9},end:{line:1054,column:18}},loc:{start:{line:1054,column:25},end:{line:1058,column:1}},line:1054},"58":{name:"(anonymous_58)",decl:{start:{line:1055,column:32},end:{line:1055,column:33}},loc:{start:{line:1055,column:51},end:{line:1057,column:3}},line:1055},"59":{name:"parseBool",decl:{start:{line:1068,column:9},end:{line:1068,column:18}},loc:{start:{line:1068,column:24},end:{line:1070,column:1}},line:1068},"60":{name:"pad",decl:{start:{line:1081,column:9},end:{line:1081,column:12}},loc:{start:{line:1081,column:25},end:{line:1084,column:1}},line:1081},"61":{name:"outputHelpIfNecessary",decl:{start:{line:1094,column:9},end:{line:1094,column:30}},loc:{start:{line:1094,column:45},end:{line:1108,column:1}},line:1094},"62":{name:"(anonymous_62)",decl:{start:{line:1098,column:25},end:{line:1098,column:26}},loc:{start:{line:1098,column:36},end:{line:1102,column:7}},line:1098}},branchMap:{"0":{loc:{start:{line:15,column:0},end:{line:49,column:1}},type:"if",locations:[{start:{line:15,column:0},end:{line:49,column:1}},{start:{line:15,column:0},end:{line:49,column:1}}],line:15},"1":{loc:{start:{line:18,column:4},end:{line:24,column:5}},type:"if",locations:[{start:{line:18,column:4},end:{line:24,column:5}},{start:{line:18,column:4},end:{line:24,column:5}}],line:18},"2":{loc:{start:{line:30,column:6},end:{line:30,column:29}},type:"if",locations:[{start:{line:30,column:6},end:{line:30,column:29}},{start:{line:30,column:6},end:{line:30,column:29}}],line:30},"3":{loc:{start:{line:31,column:6},end:{line:38,column:7}},type:"switch",locations:[{start:{line:32,column:8},end:{line:32,column:44}},{start:{line:33,column:8},end:{line:33,column:44}},{start:{line:34,column:8},end:{line:34,column:52}},{start:{line:35,column:8},end:{line:35,column:30}},{start:{line:36,column:8},end:{line:37,column:19}}],line:31},"4":{loc:{start:{line:41,column:6},end:{line:45,column:7}},type:"if",locations:[{start:{line:41,column:6},end:{line:45,column:7}},{start:{line:41,column:6},end:{line:45,column:7}}],line:41},"5":{loc:{start:{line:41,column:10},end:{line:41,column:45}},type:"binary-expr",locations:[{start:{line:41,column:10},end:{line:41,column:20}},{start:{line:41,column:24},end:{line:41,column:45}}],line:41},"6":{loc:{start:{line:52,column:2},end:{line:54,column:3}},type:"if",locations:[{start:{line:52,column:2},end:{line:54,column:3}},{start:{line:52,column:2},end:{line:54,column:3}}],line:52},"7":{loc:{start:{line:55,column:2},end:{line:65,column:3}},type:"if",locations:[{start:{line:55,column:2},end:{line:65,column:3}},{start:{line:55,column:2},end:{line:65,column:3}}],line:55},"8":{loc:{start:{line:109,column:2},end:{line:109,column:78}},type:"if",locations:[{start:{line:109,column:2},end:{line:109,column:78}},{start:{line:109,column:2},end:{line:109,column:78}}],line:109},"9":{loc:{start:{line:109,column:6},end:{line:109,column:49}},type:"binary-expr",locations:[{start:{line:109,column:6},end:{line:109,column:22}},{start:{line:109,column:26},end:{line:109,column:49}}],line:109},"10":{loc:{start:{line:136,column:9},end:{line:137,column:23}},type:"binary-expr",locations:[{start:{line:136,column:9},end:{line:136,column:26}},{start:{line:137,column:7},end:{line:137,column:23}}],line:136},"11":{loc:{start:{line:229,column:2},end:{line:229,column:27}},type:"if",locations:[{start:{line:229,column:2},end:{line:229,column:27}},{start:{line:229,column:2},end:{line:229,column:27}}],line:229},"12":{loc:{start:{line:232,column:4},end:{line:239,column:5}},type:"switch",locations:[{start:{line:233,column:6},end:{line:235,column:14}},{start:{line:236,column:6},end:{line:238,column:14}}],line:232},"13":{loc:{start:{line:267,column:14},end:{line:267,column:27}},type:"binary-expr",locations:[{start:{line:267,column:14},end:{line:267,column:21}},{start:{line:267,column:25},end:{line:267,column:27}}],line:267},"14":{loc:{start:{line:276,column:4},end:{line:278,column:5}},type:"if",locations:[{start:{line:276,column:4},end:{line:278,column:5}},{start:{line:276,column:4},end:{line:278,column:5}}],line:276},"15":{loc:{start:{line:285,column:6},end:{line:287,column:7}},type:"if",locations:[{start:{line:285,column:6},end:{line:287,column:7}},{start:{line:285,column:6},end:{line:287,column:7}}],line:285},"16":{loc:{start:{line:285,column:10},end:{line:285,column:90}},type:"binary-expr",locations:[{start:{line:285,column:10},end:{line:285,column:35}},{start:{line:285,column:39},end:{line:285,column:63}},{start:{line:285,column:67},end:{line:285,column:90}}],line:285},"17":{loc:{start:{line:291,column:6},end:{line:293,column:7}},type:"if",locations:[{start:{line:291,column:6},end:{line:293,column:7}},{start:{line:291,column:6},end:{line:293,column:7}}],line:291},"18":{loc:{start:{line:291,column:10},end:{line:291,column:41}},type:"binary-expr",locations:[{start:{line:291,column:10},end:{line:291,column:22}},{start:{line:291,column:26},end:{line:291,column:41}}],line:291},"19":{loc:{start:{line:302,column:4},end:{line:306,column:5}},type:"if",locations:[{start:{line:302,column:4},end:{line:306,column:5}},{start:{line:302,column:4},end:{line:306,column:5}}],line:302},"20":{loc:{start:{line:302,column:8},end:{line:302,column:65}},type:"binary-expr",locations:[{start:{line:302,column:8},end:{line:302,column:24}},{start:{line:302,column:29},end:{line:302,column:64}}],line:302},"21":{loc:{start:{line:369,column:2},end:{line:369,column:87}},type:"if",locations:[{start:{line:369,column:2},end:{line:369,column:87}},{start:{line:369,column:2},end:{line:369,column:87}}],line:369},"22":{loc:{start:{line:372,column:2},end:{line:377,column:3}},type:"if",locations:[{start:{line:372,column:2},end:{line:377,column:3}},{start:{line:372,column:2},end:{line:377,column:3}}],line:372},"23":{loc:{start:{line:372,column:6},end:{line:372,column:64}},type:"binary-expr",locations:[{start:{line:372,column:6},end:{line:372,column:26}},{start:{line:372,column:30},end:{line:372,column:45}},{start:{line:372,column:49},end:{line:372,column:64}}],line:372},"24":{loc:{start:{line:374,column:4},end:{line:374,column:50}},type:"if",locations:[{start:{line:374,column:4},end:{line:374,column:50}},{start:{line:374,column:4},end:{line:374,column:50}}],line:374},"25":{loc:{start:{line:376,column:4},end:{line:376,column:62}},type:"if",locations:[{start:{line:376,column:4},end:{line:376,column:62}},{start:{line:376,column:4},end:{line:376,column:62}}],line:376},"26":{loc:{start:{line:388,column:4},end:{line:388,column:41}},type:"if",locations:[{start:{line:388,column:4},end:{line:388,column:41}},{start:{line:388,column:4},end:{line:388,column:41}}],line:388},"27":{loc:{start:{line:388,column:8},end:{line:388,column:25}},type:"binary-expr",locations:[{start:{line:388,column:8},end:{line:388,column:19}},{start:{line:388,column:23},end:{line:388,column:25}}],line:388},"28":{loc:{start:{line:391,column:4},end:{line:403,column:5}},type:"if",locations:[{start:{line:391,column:4},end:{line:403,column:5}},{start:{line:391,column:4},end:{line:403,column:5}}],line:391},"29":{loc:{start:{line:391,column:8},end:{line:391,column:74}},type:"binary-expr",locations:[{start:{line:391,column:8},end:{line:391,column:38}},{start:{line:391,column:42},end:{line:391,column:74}}],line:391},"30":{loc:{start:{line:393,column:6},end:{line:399,column:7}},type:"if",locations:[{start:{line:393,column:6},end:{line:399,column:7}},{start:{line:393,column:6},end:{line:399,column:7}}],line:393},"31":{loc:{start:{line:394,column:39},end:{line:396,column:17}},type:"cond-expr",locations:[{start:{line:395,column:12},end:{line:395,column:32}},{start:{line:396,column:12},end:{line:396,column:17}}],line:394},"32":{loc:{start:{line:395,column:12},end:{line:395,column:32}},type:"binary-expr",locations:[{start:{line:395,column:12},end:{line:395,column:24}},{start:{line:395,column:28},end:{line:395,column:32}}],line:395},"33":{loc:{start:{line:400,column:11},end:{line:403,column:5}},type:"if",locations:[{start:{line:400,column:11},end:{line:403,column:5}},{start:{line:400,column:11},end:{line:403,column:5}}],line:400},"34":{loc:{start:{line:422,column:2},end:{line:422,column:48}},type:"if",locations:[{start:{line:422,column:2},end:{line:422,column:48}},{start:{line:422,column:2},end:{line:422,column:48}}],line:422},"35":{loc:{start:{line:445,column:4},end:{line:451,column:5}},type:"if",locations:[{start:{line:445,column:4},end:{line:451,column:5}},{start:{line:445,column:4},end:{line:451,column:5}}],line:445},"36":{loc:{start:{line:445,column:8},end:{line:445,column:56}},type:"binary-expr",locations:[{start:{line:445,column:8},end:{line:445,column:22}},{start:{line:445,column:26},end:{line:445,column:39}},{start:{line:445,column:43},end:{line:445,column:56}}],line:445},"37":{loc:{start:{line:475,column:2},end:{line:503,column:3}},type:"if",locations:[{start:{line:475,column:2},end:{line:503,column:3}},{start:{line:475,column:2},end:{line:503,column:3}}],line:475},"38":{loc:{start:{line:477,column:4},end:{line:484,column:5}},type:"if",locations:[{start:{line:477,column:4},end:{line:484,column:5}},{start:{line:477,column:4},end:{line:484,column:5}}],line:477},"39":{loc:{start:{line:490,column:4},end:{line:492,column:5}},type:"if",locations:[{start:{line:490,column:4},end:{line:492,column:5}},{start:{line:490,column:4},end:{line:492,column:5}}],line:490},"40":{loc:{start:{line:499,column:6},end:{line:501,column:7}},type:"if",locations:[{start:{line:499,column:6},end:{line:501,column:7}},{start:{line:499,column:6},end:{line:501,column:7}}],line:499},"41":{loc:{start:{line:499,column:10},end:{line:499,column:83}},type:"binary-expr",locations:[{start:{line:499,column:10},end:{line:499,column:35}},{start:{line:499,column:39},end:{line:499,column:63}},{start:{line:499,column:67},end:{line:499,column:83}}],line:499},"42":{loc:{start:{line:518,column:4},end:{line:520,column:5}},type:"if",locations:[{start:{line:518,column:4},end:{line:520,column:5}},{start:{line:518,column:4},end:{line:520,column:5}}],line:518},"43":{loc:{start:{line:548,column:4},end:{line:551,column:5}},type:"if",locations:[{start:{line:548,column:4},end:{line:551,column:5}},{start:{line:548,column:4},end:{line:551,column:5}}],line:548},"44":{loc:{start:{line:553,column:4},end:{line:556,column:5}},type:"if",locations:[{start:{line:553,column:4},end:{line:556,column:5}},{start:{line:553,column:4},end:{line:556,column:5}}],line:553},"45":{loc:{start:{line:562,column:4},end:{line:587,column:5}},type:"if",locations:[{start:{line:562,column:4},end:{line:587,column:5}},{start:{line:562,column:4},end:{line:587,column:5}}],line:562},"46":{loc:{start:{line:563,column:6},end:{line:565,column:7}},type:"if",locations:[{start:{line:563,column:6},end:{line:565,column:7}},{start:{line:563,column:6},end:{line:565,column:7}}],line:563},"47":{loc:{start:{line:568,column:6},end:{line:585,column:7}},type:"if",locations:[{start:{line:568,column:6},end:{line:585,column:7}},{start:{line:568,column:6},end:{line:585,column:7}}],line:568},"48":{loc:{start:{line:570,column:8},end:{line:570,column:67}},type:"if",locations:[{start:{line:570,column:8},end:{line:570,column:67}},{start:{line:570,column:8},end:{line:570,column:67}}],line:570},"49":{loc:{start:{line:571,column:8},end:{line:571,column:74}},type:"if",locations:[{start:{line:571,column:8},end:{line:571,column:74}},{start:{line:571,column:8},end:{line:571,column:74}}],line:571},"50":{loc:{start:{line:574,column:13},end:{line:585,column:7}},type:"if",locations:[{start:{line:574,column:13},end:{line:585,column:7}},{start:{line:574,column:13},end:{line:585,column:7}}],line:574},"51":{loc:{start:{line:576,column:8},end:{line:580,column:9}},type:"if",locations:[{start:{line:576,column:8},end:{line:580,column:9}},{start:{line:576,column:8},end:{line:580,column:9}}],line:576},"52":{loc:{start:{line:576,column:12},end:{line:576,column:40}},type:"binary-expr",locations:[{start:{line:576,column:12},end:{line:576,column:23}},{start:{line:576,column:27},end:{line:576,column:40}}],line:576},"53":{loc:{start:{line:590,column:4},end:{line:600,column:5}},type:"if",locations:[{start:{line:590,column:4},end:{line:600,column:5}},{start:{line:590,column:4},end:{line:600,column:5}}],line:590},"54":{loc:{start:{line:590,column:8},end:{line:590,column:39}},type:"binary-expr",locations:[{start:{line:590,column:8},end:{line:590,column:22}},{start:{line:590,column:26},end:{line:590,column:39}}],line:590},"55":{loc:{start:{line:596,column:6},end:{line:598,column:7}},type:"if",locations:[{start:{line:596,column:6},end:{line:598,column:7}},{start:{line:596,column:6},end:{line:598,column:7}}],line:596},"56":{loc:{start:{line:596,column:10},end:{line:596,column:42}},type:"binary-expr",locations:[{start:{line:596,column:10},end:{line:596,column:19}},{start:{line:596,column:23},end:{line:596,column:42}}],line:596},"57":{loc:{start:{line:633,column:2},end:{line:637,column:3}},type:"if",locations:[{start:{line:633,column:2},end:{line:637,column:3}},{start:{line:633,column:2},end:{line:637,column:3}}],line:633},"58":{loc:{start:{line:684,column:2},end:{line:684,column:50}},type:"if",locations:[{start:{line:684,column:2},end:{line:684,column:50}},{start:{line:684,column:2},end:{line:684,column:50}}],line:684},"59":{loc:{start:{line:686,column:10},end:{line:686,column:34}},type:"binary-expr",locations:[{start:{line:686,column:10},end:{line:686,column:15}},{start:{line:686,column:19},end:{line:686,column:34}}],line:686},"60":{loc:{start:{line:704,column:2},end:{line:704,column:54}},type:"if",locations:[{start:{line:704,column:2},end:{line:704,column:54}},{start:{line:704,column:2},end:{line:704,column:54}}],line:704},"61":{loc:{start:{line:719,column:11},end:{line:721,column:28}},type:"cond-expr",locations:[{start:{line:720,column:8},end:{line:720,column:28}},{start:{line:721,column:8},end:{line:721,column:28}}],line:719},"62":{loc:{start:{line:725,column:7},end:{line:725,column:47}},type:"cond-expr",locations:[{start:{line:725,column:30},end:{line:725,column:42}},{start:{line:725,column:45},end:{line:725,column:47}}],line:725},"63":{loc:{start:{line:727,column:7},end:{line:727,column:41}},type:"cond-expr",locations:[{start:{line:727,column:26},end:{line:727,column:36}},{start:{line:727,column:39},end:{line:727,column:41}}],line:727},"64":{loc:{start:{line:728,column:2},end:{line:728,column:57}},type:"if",locations:[{start:{line:728,column:2},end:{line:728,column:57}},{start:{line:728,column:2},end:{line:728,column:57}}],line:728},"65":{loc:{start:{line:728,column:36},end:{line:728,column:56}},type:"binary-expr",locations:[{start:{line:728,column:36},end:{line:728,column:47}},{start:{line:728,column:51},end:{line:728,column:56}}],line:728},"66":{loc:{start:{line:774,column:2},end:{line:774,column:39}},type:"if",locations:[{start:{line:774,column:2},end:{line:774,column:39}},{start:{line:774,column:2},end:{line:774,column:39}}],line:774},"67":{loc:{start:{line:781,column:15},end:{line:783,column:32}},type:"cond-expr",locations:[{start:{line:782,column:12},end:{line:782,column:32}},{start:{line:783,column:12},end:{line:783,column:32}}],line:781},"68":{loc:{start:{line:787,column:11},end:{line:789,column:14}},type:"cond-expr",locations:[{start:{line:788,column:12},end:{line:788,column:24}},{start:{line:789,column:12},end:{line:789,column:14}}],line:787},"69":{loc:{start:{line:790,column:11},end:{line:792,column:14}},type:"cond-expr",locations:[{start:{line:791,column:12},end:{line:791,column:36}},{start:{line:792,column:12},end:{line:792,column:14}}],line:790},"70":{loc:{start:{line:830,column:4},end:{line:830,column:91}},type:"if",locations:[{start:{line:830,column:4},end:{line:830,column:91}},{start:{line:830,column:4},end:{line:830,column:91}}],line:830},"71":{loc:{start:{line:847,column:4},end:{line:847,column:97}},type:"if",locations:[{start:{line:847,column:4},end:{line:847,column:97}},{start:{line:847,column:4},end:{line:847,column:97}}],line:847},"72":{loc:{start:{line:861,column:2},end:{line:863,column:3}},type:"if",locations:[{start:{line:861,column:2},end:{line:863,column:3}},{start:{line:861,column:2},end:{line:863,column:3}}],line:861},"73":{loc:{start:{line:862,column:31},end:{line:862,column:44}},type:"binary-expr",locations:[{start:{line:862,column:31},end:{line:862,column:38}},{start:{line:862,column:42},end:{line:862,column:44}}],line:862},"74":{loc:{start:{line:885,column:4},end:{line:890,column:5}},type:"if",locations:[{start:{line:885,column:4},end:{line:890,column:5}},{start:{line:885,column:4},end:{line:890,column:5}}],line:885},"75":{loc:{start:{line:885,column:8},end:{line:885,column:36}},type:"binary-expr",locations:[{start:{line:885,column:8},end:{line:885,column:19}},{start:{line:885,column:23},end:{line:885,column:36}}],line:885},"76":{loc:{start:{line:919,column:2},end:{line:919,column:74}},type:"if",locations:[{start:{line:919,column:2},end:{line:919,column:74}},{start:{line:919,column:2},end:{line:919,column:74}}],line:919},"77":{loc:{start:{line:952,column:2},end:{line:955,column:3}},type:"if",locations:[{start:{line:952,column:2},end:{line:955,column:3}},{start:{line:952,column:2},end:{line:955,column:3}}],line:952},"78":{loc:{start:{line:962,column:4},end:{line:969,column:5}},type:"if",locations:[{start:{line:962,column:4},end:{line:969,column:5}},{start:{line:962,column:4},end:{line:969,column:5}}],line:962},"79":{loc:{start:{line:962,column:8},end:{line:962,column:34}},type:"binary-expr",locations:[{start:{line:962,column:8},end:{line:962,column:11}},{start:{line:962,column:15},end:{line:962,column:34}}],line:962},"80":{loc:{start:{line:966,column:6},end:{line:966,column:66}},type:"if",locations:[{start:{line:966,column:6},end:{line:966,column:66}},{start:{line:966,column:6},end:{line:966,column:66}}],line:966},"81":{loc:{start:{line:971,column:4},end:{line:974,column:5}},type:"if",locations:[{start:{line:971,column:4},end:{line:974,column:5}},{start:{line:971,column:4},end:{line:974,column:5}}],line:971},"82":{loc:{start:{line:971,column:8},end:{line:971,column:42}},type:"binary-expr",locations:[{start:{line:971,column:8},end:{line:971,column:11}},{start:{line:971,column:15},end:{line:971,column:23}},{start:{line:971,column:27},end:{line:971,column:42}}],line:971},"83":{loc:{start:{line:1000,column:4},end:{line:1002,column:5}},type:"if",locations:[{start:{line:1000,column:4},end:{line:1002,column:5}},{start:{line:1000,column:4},end:{line:1002,column:5}}],line:1000},"84":{loc:{start:{line:1035,column:6},end:{line:1039,column:7}},type:"if",locations:[{start:{line:1035,column:6},end:{line:1039,column:7}},{start:{line:1035,column:6},end:{line:1039,column:7}}],line:1035},"85":{loc:{start:{line:1095,column:12},end:{line:1095,column:25}},type:"binary-expr",locations:[{start:{line:1095,column:12},end:{line:1095,column:19}},{start:{line:1095,column:23},end:{line:1095,column:25}}],line:1095},"86":{loc:{start:{line:1097,column:4},end:{line:1104,column:5}},type:"if",locations:[{start:{line:1097,column:4},end:{line:1104,column:5}},{start:{line:1097,column:4},end:{line:1104,column:5}}],line:1097},"87":{loc:{start:{line:1097,column:8},end:{line:1097,column:52}},type:"binary-expr",locations:[{start:{line:1097,column:8},end:{line:1097,column:30}},{start:{line:1097,column:34},end:{line:1097,column:52}}],line:1097}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"013a8f894fb55b917b86396da42520ceeba2c967"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_28u9ed2v2k=function(){return actualCoverage;};}return actualCoverage;}cov_28u9ed2v2k();/*!
 * commander
 * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>
 * MIT Licensed
 */ /*!
 * Console
 */var util=(cov_28u9ed2v2k().s[0]++,require('util'));var fs=(cov_28u9ed2v2k().s[1]++,require("fs"));/* Monkey patching */cov_28u9ed2v2k().s[2]++;if(!util.format){cov_28u9ed2v2k().b[0][0]++;var formatRegExp=(cov_28u9ed2v2k().s[3]++,/%[sdj%]/g);cov_28u9ed2v2k().s[4]++;util.format=function(f){cov_28u9ed2v2k().f[0]++;cov_28u9ed2v2k().s[5]++;if(typeof f!=='string'){cov_28u9ed2v2k().b[1][0]++;var objects=(cov_28u9ed2v2k().s[6]++,[]);cov_28u9ed2v2k().s[7]++;for(var i=(cov_28u9ed2v2k().s[8]++,0);i<arguments.length;i++){cov_28u9ed2v2k().s[9]++;objects.push(util.inspect(arguments[i]));}cov_28u9ed2v2k().s[10]++;return objects.join(' ');}else{cov_28u9ed2v2k().b[1][1]++;}var i=(cov_28u9ed2v2k().s[11]++,1);var args=(cov_28u9ed2v2k().s[12]++,arguments);var len=(cov_28u9ed2v2k().s[13]++,args.length);var str=(cov_28u9ed2v2k().s[14]++,String(f).replace(formatRegExp,function(x){cov_28u9ed2v2k().f[1]++;cov_28u9ed2v2k().s[15]++;if(i>=len){cov_28u9ed2v2k().b[2][0]++;cov_28u9ed2v2k().s[16]++;return x;}else{cov_28u9ed2v2k().b[2][1]++;}cov_28u9ed2v2k().s[17]++;switch(x){case'%s':cov_28u9ed2v2k().b[3][0]++;cov_28u9ed2v2k().s[18]++;return String(args[i++]);case'%d':cov_28u9ed2v2k().b[3][1]++;cov_28u9ed2v2k().s[19]++;return Number(args[i++]);case'%j':cov_28u9ed2v2k().b[3][2]++;cov_28u9ed2v2k().s[20]++;return JSON.stringify(args[i++]);case'%%':cov_28u9ed2v2k().b[3][3]++;cov_28u9ed2v2k().s[21]++;return'%';default:cov_28u9ed2v2k().b[3][4]++;cov_28u9ed2v2k().s[22]++;return x;}}));cov_28u9ed2v2k().s[23]++;for(var x=(cov_28u9ed2v2k().s[24]++,args[i]);i<len;x=args[++i]){cov_28u9ed2v2k().s[25]++;if((cov_28u9ed2v2k().b[5][0]++,x===null)||(cov_28u9ed2v2k().b[5][1]++,typeof x!=='object')){cov_28u9ed2v2k().b[4][0]++;cov_28u9ed2v2k().s[26]++;str+=' '+x;}else{cov_28u9ed2v2k().b[4][1]++;cov_28u9ed2v2k().s[27]++;str+=' '+util.inspect(x);}}cov_28u9ed2v2k().s[28]++;return str;};}else{cov_28u9ed2v2k().b[0][1]++;}cov_28u9ed2v2k().s[29]++;var consoleFlush=function(data){cov_28u9ed2v2k().f[2]++;cov_28u9ed2v2k().s[30]++;if(!Buffer.isBuffer(data)){cov_28u9ed2v2k().b[6][0]++;cov_28u9ed2v2k().s[31]++;data=Buffer.from(''+data);}else{cov_28u9ed2v2k().b[6][1]++;}cov_28u9ed2v2k().s[32]++;if(data.length){cov_28u9ed2v2k().b[7][0]++;var written=(cov_28u9ed2v2k().s[33]++,0);cov_28u9ed2v2k().s[34]++;do{cov_28u9ed2v2k().s[35]++;try{var len=(cov_28u9ed2v2k().s[36]++,data.length-written);cov_28u9ed2v2k().s[37]++;written+=fs.writeSync(process.stdout.fd,data,written,len,-1);}catch(e){}}while(written<data.length);}else{cov_28u9ed2v2k().b[7][1]++;}};/**
 * Module dependencies.
 */var EventEmitter=(cov_28u9ed2v2k().s[38]++,require('events').EventEmitter),path=(cov_28u9ed2v2k().s[39]++,require('path')),tty=(cov_28u9ed2v2k().s[40]++,require('tty')),basename=(cov_28u9ed2v2k().s[41]++,path.basename);/**
 * Expose the root command.
 */cov_28u9ed2v2k().s[42]++;exports=module.exports=new Command();/**
 * Expose `Command`.
 */cov_28u9ed2v2k().s[43]++;exports.Command=Command;/**
 * Expose `Option`.
 */cov_28u9ed2v2k().s[44]++;exports.Option=Option;/**
 * Initialize a new `Option` with the given `flags` and `description`.
 *
 * @param {String} flags
 * @param {String} description
 * @api public
 */function Option(flags,description){cov_28u9ed2v2k().f[3]++;cov_28u9ed2v2k().s[45]++;this.flags=flags;cov_28u9ed2v2k().s[46]++;this.required=~flags.indexOf('<');cov_28u9ed2v2k().s[47]++;this.optional=~flags.indexOf('[');cov_28u9ed2v2k().s[48]++;this.bool=!~flags.indexOf('-no-');cov_28u9ed2v2k().s[49]++;flags=flags.split(/[ ,|]+/);cov_28u9ed2v2k().s[50]++;if((cov_28u9ed2v2k().b[9][0]++,flags.length>1)&&(cov_28u9ed2v2k().b[9][1]++,!/^[[<]/.test(flags[1]))){cov_28u9ed2v2k().b[8][0]++;cov_28u9ed2v2k().s[51]++;this.short=flags.shift();}else{cov_28u9ed2v2k().b[8][1]++;}cov_28u9ed2v2k().s[52]++;this.long=flags.shift();cov_28u9ed2v2k().s[53]++;this.description=description;}/**
 * Return option name.
 *
 * @return {String}
 * @api private
 */cov_28u9ed2v2k().s[54]++;Option.prototype.name=function(){cov_28u9ed2v2k().f[4]++;cov_28u9ed2v2k().s[55]++;return this.long.replace('--','').replace('no-','');};/**
 * Check if `arg` matches the short or long flag.
 *
 * @param {String} arg
 * @return {Boolean}
 * @api private
 */cov_28u9ed2v2k().s[56]++;Option.prototype.is=function(arg){cov_28u9ed2v2k().f[5]++;cov_28u9ed2v2k().s[57]++;return(cov_28u9ed2v2k().b[10][0]++,arg==this.short)||(cov_28u9ed2v2k().b[10][1]++,arg==this.long);};/**
 * Initialize a new `Command`.
 *
 * @param {String} name
 * @api public
 */function Command(name){cov_28u9ed2v2k().f[6]++;cov_28u9ed2v2k().s[58]++;this.commands=[];cov_28u9ed2v2k().s[59]++;this.options=[];cov_28u9ed2v2k().s[60]++;this.args=[];cov_28u9ed2v2k().s[61]++;this.name=name;cov_28u9ed2v2k().s[62]++;this.opts={};}/**
 * Inherit from `EventEmitter.prototype`.
 */cov_28u9ed2v2k().s[63]++;Command.prototype.__proto__=EventEmitter.prototype;/**
 * Add command `name`.
 *
 * The `.action()` callback is invoked when the
 * command `name` is specified via __ARGV__,
 * and the remaining arguments are applied to the
 * function for access.
 *
 * When the `name` is "*" an un-matched command
 * will be passed as the first arg, followed by
 * the rest of __ARGV__ remaining.
 *
 * Examples:
 *
 *      program
 *        .version('0.0.1')
 *        .option('-C, --chdir <path>', 'change the working directory')
 *        .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')
 *        .option('-T, --no-tests', 'ignore test hook')
 *     
 *      program
 *        .command('setup')
 *        .description('run remote setup commands')
 *        .action(function(){
 *          console.log('setup');
 *        });
 *     
 *      program
 *        .command('exec <cmd>')
 *        .description('run the given remote command')
 *        .action(function(cmd){
 *          console.log('exec "%s"', cmd);
 *        });
 *     
 *      program
 *        .command('*')
 *        .description('deploy the given env')
 *        .action(function(env){
 *          console.log('deploying "%s"', env);
 *        });
 *     
 *      program.parse(process.argv);
  *
 * @param {String} name
 * @return {Command} the new command
 * @api public
 */cov_28u9ed2v2k().s[64]++;Command.prototype.command=function(name){cov_28u9ed2v2k().f[7]++;var args=(cov_28u9ed2v2k().s[65]++,name.split(/ +/));var cmd=(cov_28u9ed2v2k().s[66]++,new Command(args.shift()));cov_28u9ed2v2k().s[67]++;this.commands.push(cmd);cov_28u9ed2v2k().s[68]++;cmd.parseExpectedArgs(args);cov_28u9ed2v2k().s[69]++;cmd.parent=this;cov_28u9ed2v2k().s[70]++;return cmd;};/**
 * Parse expected `args`.
 *
 * For example `["[type]"]` becomes `[{ required: false, name: 'type' }]`.
 *
 * @param {Array} args
 * @return {Command} for chaining
 * @api public
 */cov_28u9ed2v2k().s[71]++;Command.prototype.parseExpectedArgs=function(args){cov_28u9ed2v2k().f[8]++;cov_28u9ed2v2k().s[72]++;if(!args.length){cov_28u9ed2v2k().b[11][0]++;cov_28u9ed2v2k().s[73]++;return;}else{cov_28u9ed2v2k().b[11][1]++;}var self=(cov_28u9ed2v2k().s[74]++,this);cov_28u9ed2v2k().s[75]++;args.forEach(function(arg){cov_28u9ed2v2k().f[9]++;cov_28u9ed2v2k().s[76]++;switch(arg[0]){case'<':cov_28u9ed2v2k().b[12][0]++;cov_28u9ed2v2k().s[77]++;self.args.push({required:true,name:arg.slice(1,-1)});cov_28u9ed2v2k().s[78]++;break;case'[':cov_28u9ed2v2k().b[12][1]++;cov_28u9ed2v2k().s[79]++;self.args.push({required:false,name:arg.slice(1,-1)});cov_28u9ed2v2k().s[80]++;break;}});cov_28u9ed2v2k().s[81]++;return this;};/**
 * Register callback `fn` for the command.
 *
 * Examples:
 *
 *      program
 *        .command('help')
 *        .description('display verbose help')
 *        .action(function(){
 *           // output help here
 *        });
 *
 * @param {Function} fn
 * @return {Command} for chaining
 * @api public
 */cov_28u9ed2v2k().s[82]++;Command.prototype.action=function(fn){cov_28u9ed2v2k().f[10]++;var self=(cov_28u9ed2v2k().s[83]++,this);cov_28u9ed2v2k().s[84]++;this.parent.on(this.name,function(args,unknown){cov_28u9ed2v2k().f[11]++;cov_28u9ed2v2k().s[85]++;args=args.slice();// Parse any so-far unknown options
cov_28u9ed2v2k().s[86]++;unknown=(cov_28u9ed2v2k().b[13][0]++,unknown)||(cov_28u9ed2v2k().b[13][1]++,[]);var parsed=(cov_28u9ed2v2k().s[87]++,self.parseOptions(unknown));// Output help if necessary
cov_28u9ed2v2k().s[88]++;outputHelpIfNecessary(self,parsed.unknown);// If there are still any unknown options, then we simply 
// die, unless someone asked for help, in which case we give it
// to them, and then we die.
cov_28u9ed2v2k().s[89]++;if(parsed.unknown.length>0){cov_28u9ed2v2k().b[14][0]++;cov_28u9ed2v2k().s[90]++;self.unknownOption(parsed.unknown[0]);}else{cov_28u9ed2v2k().b[14][1]++;}// If we were expecting a required option and we missed it,
// error out
cov_28u9ed2v2k().s[91]++;self.options.forEach(function(option,i){cov_28u9ed2v2k().f[12]++;var oname=(cov_28u9ed2v2k().s[92]++,option.name());var name=(cov_28u9ed2v2k().s[93]++,camelcase(oname));cov_28u9ed2v2k().s[94]++;if((cov_28u9ed2v2k().b[16][0]++,option.isPresenceRequired)&&(cov_28u9ed2v2k().b[16][1]++,self[name]===undefined)&&(cov_28u9ed2v2k().b[16][2]++,!parsed.required[oname])){cov_28u9ed2v2k().b[15][0]++;cov_28u9ed2v2k().s[95]++;self.optionMissing(option);}else{cov_28u9ed2v2k().b[15][1]++;}});cov_28u9ed2v2k().s[96]++;self.args.forEach(function(arg,i){cov_28u9ed2v2k().f[13]++;cov_28u9ed2v2k().s[97]++;if((cov_28u9ed2v2k().b[18][0]++,arg.required)&&(cov_28u9ed2v2k().b[18][1]++,null==args[i])){cov_28u9ed2v2k().b[17][0]++;cov_28u9ed2v2k().s[98]++;self.missingArgument(arg.name);}else{cov_28u9ed2v2k().b[17][1]++;}});// Always append ourselves to the end of the arguments,
// to make sure we match the number of arguments the user
// expects
// If we have expected arguments and we have at most the number of
// expected arguments, then add it to the end. If not, push us
// at the end (for the case of varargs).
cov_28u9ed2v2k().s[99]++;if((cov_28u9ed2v2k().b[20][0]++,self.args.length)&&(cov_28u9ed2v2k().b[20][1]++,args.length<=self.args.length-1)){cov_28u9ed2v2k().b[19][0]++;cov_28u9ed2v2k().s[100]++;args[self.args.length]=self;}else{cov_28u9ed2v2k().b[19][1]++;cov_28u9ed2v2k().s[101]++;args.push(self);}cov_28u9ed2v2k().s[102]++;fn.apply(this,args);});cov_28u9ed2v2k().s[103]++;return this;};/**
 * Define option with `flags`, `description` and optional
 * coercion `fn`. 
 *
 * The `flags` string should contain both the short and long flags,
 * separated by comma, a pipe or space. The following are all valid
 * all will output this way when `--help` is used.
 *
 *    "-p, --pepper"
 *    "-p|--pepper"
 *    "-p --pepper"
 *
 * Examples:
 *
 *     // simple boolean defaulting to false
 *     program.option('-p, --pepper', 'add pepper');
 *
 *     --pepper
 *     program.pepper
 *     // => Boolean
 *
 *     // simple boolean defaulting to false
 *     program.option('-C, --no-cheese', 'remove cheese');
 *
 *     program.cheese
 *     // => true
 *
 *     --no-cheese
 *     program.cheese
 *     // => true
 *
 *     // required argument
 *     program.option('-C, --chdir <path>', 'change the working directory');
 *
 *     --chdir /tmp
 *     program.chdir
 *     // => "/tmp"
 *
 *     // optional argument
 *     program.option('-c, --cheese [type]', 'add cheese [marble]');
 *
 * @param {String} flags
 * @param {String} description
 * @param {Function|Mixed} fn or default
 * @param {Mixed} defaultValue
 * @return {Command} for chaining
 * @api public
 */cov_28u9ed2v2k().s[104]++;Command.prototype.option=function(flags,description,fn,defaultValue,isRequired){cov_28u9ed2v2k().f[14]++;var self=(cov_28u9ed2v2k().s[105]++,this),option=(cov_28u9ed2v2k().s[106]++,new Option(flags,description)),oname=(cov_28u9ed2v2k().s[107]++,option.name()),name=(cov_28u9ed2v2k().s[108]++,camelcase(oname));// default as 3rd arg
cov_28u9ed2v2k().s[109]++;if('function'!=typeof fn){cov_28u9ed2v2k().b[21][0]++;cov_28u9ed2v2k().s[110]++;isRequired=defaultValue,defaultValue=fn,fn=null;}else{cov_28u9ed2v2k().b[21][1]++;}// preassign default value only for --no-*, [optional], or <required>
cov_28u9ed2v2k().s[111]++;if((cov_28u9ed2v2k().b[23][0]++,false==option.bool)||(cov_28u9ed2v2k().b[23][1]++,option.optional)||(cov_28u9ed2v2k().b[23][2]++,option.required)){cov_28u9ed2v2k().b[22][0]++;cov_28u9ed2v2k().s[112]++;// when --no-* we make sure default is true
if(false==option.bool){cov_28u9ed2v2k().b[24][0]++;cov_28u9ed2v2k().s[113]++;defaultValue=true;}else{cov_28u9ed2v2k().b[24][1]++;}// preassign only if we have a default
cov_28u9ed2v2k().s[114]++;if(undefined!==defaultValue){cov_28u9ed2v2k().b[25][0]++;cov_28u9ed2v2k().s[115]++;self[name]=defaultValue;}else{cov_28u9ed2v2k().b[25][1]++;}}else{cov_28u9ed2v2k().b[22][1]++;}cov_28u9ed2v2k().s[116]++;option.isPresenceRequired=isRequired;// register the option
cov_28u9ed2v2k().s[117]++;this.options.push(option);// when it's passed assign the value
// and conditionally invoke the callback
cov_28u9ed2v2k().s[118]++;this.on(oname,function(val){cov_28u9ed2v2k().f[15]++;cov_28u9ed2v2k().s[119]++;// coercion
if((cov_28u9ed2v2k().b[27][0]++,null!=val)&&(cov_28u9ed2v2k().b[27][1]++,fn)){cov_28u9ed2v2k().b[26][0]++;cov_28u9ed2v2k().s[120]++;val=fn(val);}else{cov_28u9ed2v2k().b[26][1]++;}// unassigned or bool
cov_28u9ed2v2k().s[121]++;if((cov_28u9ed2v2k().b[29][0]++,'boolean'==typeof self[name])||(cov_28u9ed2v2k().b[29][1]++,'undefined'==typeof self[name])){cov_28u9ed2v2k().b[28][0]++;cov_28u9ed2v2k().s[122]++;// if no value, bool true, and we have a default, then use it!
if(null==val){cov_28u9ed2v2k().b[30][0]++;cov_28u9ed2v2k().s[123]++;self[name]=self.opts[name]=option.bool?(cov_28u9ed2v2k().b[31][0]++,(cov_28u9ed2v2k().b[32][0]++,defaultValue)||(cov_28u9ed2v2k().b[32][1]++,true)):(cov_28u9ed2v2k().b[31][1]++,false);}else{cov_28u9ed2v2k().b[30][1]++;cov_28u9ed2v2k().s[124]++;self[name]=self.opts[name]=val;}}else{cov_28u9ed2v2k().b[28][1]++;cov_28u9ed2v2k().s[125]++;if(null!==val){cov_28u9ed2v2k().b[33][0]++;cov_28u9ed2v2k().s[126]++;// reassign
self[name]=self.opts[name]=val;}else{cov_28u9ed2v2k().b[33][1]++;}}});cov_28u9ed2v2k().s[127]++;return this;};/**
 * Parse `argv`, settings options and invoking commands when defined.
 *
 * @param {Array} argv
 * @return {Command} for chaining
 * @api public
 */cov_28u9ed2v2k().s[128]++;Command.prototype.parse=function(argv){cov_28u9ed2v2k().f[16]++;cov_28u9ed2v2k().s[129]++;// store raw args
this.rawArgs=argv;// guess name
cov_28u9ed2v2k().s[130]++;if(!this.name){cov_28u9ed2v2k().b[34][0]++;cov_28u9ed2v2k().s[131]++;this.name=basename(argv[1]);}else{cov_28u9ed2v2k().b[34][1]++;}// process argv
var parsed=(cov_28u9ed2v2k().s[132]++,this.parseOptions(this.normalize(argv.slice(2))));cov_28u9ed2v2k().s[133]++;this.args=parsed.args;cov_28u9ed2v2k().s[134]++;return this.parseArgs(this.args,parsed.unknown,parsed.required);};/**
 * Normalize `args`, splitting joined short flags. For example
 * the arg "-abc" is equivalent to "-a -b -c".
 *
 * @param {Array} args
 * @return {Array}
 * @api private
 */cov_28u9ed2v2k().s[135]++;Command.prototype.normalize=function(args){cov_28u9ed2v2k().f[17]++;var ret=(cov_28u9ed2v2k().s[136]++,[]),arg;cov_28u9ed2v2k().s[137]++;for(var i=(cov_28u9ed2v2k().s[138]++,0),len=(cov_28u9ed2v2k().s[139]++,args.length);i<len;++i){cov_28u9ed2v2k().s[140]++;arg=args[i];cov_28u9ed2v2k().s[141]++;if((cov_28u9ed2v2k().b[36][0]++,arg.length>1)&&(cov_28u9ed2v2k().b[36][1]++,'-'==arg[0])&&(cov_28u9ed2v2k().b[36][2]++,'-'!=arg[1])){cov_28u9ed2v2k().b[35][0]++;cov_28u9ed2v2k().s[142]++;arg.slice(1).split('').forEach(function(c){cov_28u9ed2v2k().f[18]++;cov_28u9ed2v2k().s[143]++;ret.push('-'+c);});}else{cov_28u9ed2v2k().b[35][1]++;cov_28u9ed2v2k().s[144]++;ret.push(arg);}}cov_28u9ed2v2k().s[145]++;return ret;};/**
 * Parse command `args`.
 *
 * When listener(s) are available those
 * callbacks are invoked, otherwise the "*"
 * event is emitted and those actions are invoked.
 *
 * @param {Array} args
 * @return {Command} for chaining
 * @api private
 */cov_28u9ed2v2k().s[146]++;Command.prototype.parseArgs=function(args,unknown,required){cov_28u9ed2v2k().f[19]++;var cmds=(cov_28u9ed2v2k().s[147]++,this.commands),len=(cov_28u9ed2v2k().s[148]++,cmds.length),self=(cov_28u9ed2v2k().s[149]++,this),name;cov_28u9ed2v2k().s[150]++;if(args.length){cov_28u9ed2v2k().b[37][0]++;cov_28u9ed2v2k().s[151]++;name=args[0];cov_28u9ed2v2k().s[152]++;if(this.listeners(name).length){cov_28u9ed2v2k().b[38][0]++;var commandName=(cov_28u9ed2v2k().s[153]++,args.shift());cov_28u9ed2v2k().s[154]++;this.executedCommand=commandName;cov_28u9ed2v2k().s[155]++;this.emit(commandName,args,unknown);}else{cov_28u9ed2v2k().b[38][1]++;cov_28u9ed2v2k().s[156]++;this.executedCommand="*";cov_28u9ed2v2k().s[157]++;this.emit('*',args);}}else{cov_28u9ed2v2k().b[37][1]++;cov_28u9ed2v2k().s[158]++;outputHelpIfNecessary(this,unknown);// If there were no args and we have unknown options,
// then they are extraneous and we need to error.
cov_28u9ed2v2k().s[159]++;if(unknown.length>0){cov_28u9ed2v2k().b[39][0]++;cov_28u9ed2v2k().s[160]++;this.unknownOption(unknown[0]);}else{cov_28u9ed2v2k().b[39][1]++;}// If we were expecting a required option and we missed it,
// error out
cov_28u9ed2v2k().s[161]++;this.options.forEach(function(option,i){cov_28u9ed2v2k().f[20]++;var oname=(cov_28u9ed2v2k().s[162]++,option.name());var name=(cov_28u9ed2v2k().s[163]++,camelcase(oname));cov_28u9ed2v2k().s[164]++;if((cov_28u9ed2v2k().b[41][0]++,option.isPresenceRequired)&&(cov_28u9ed2v2k().b[41][1]++,self[name]===undefined)&&(cov_28u9ed2v2k().b[41][2]++,!required[oname])){cov_28u9ed2v2k().b[40][0]++;cov_28u9ed2v2k().s[165]++;self.optionMissing(option);}else{cov_28u9ed2v2k().b[40][1]++;}});}cov_28u9ed2v2k().s[166]++;return this;};/**
 * Return an option matching `arg` if any.
 *
 * @param {String} arg
 * @return {Option}
 * @api private
 */cov_28u9ed2v2k().s[167]++;Command.prototype.optionFor=function(arg){cov_28u9ed2v2k().f[21]++;cov_28u9ed2v2k().s[168]++;for(var i=(cov_28u9ed2v2k().s[169]++,0),len=(cov_28u9ed2v2k().s[170]++,this.options.length);i<len;++i){cov_28u9ed2v2k().s[171]++;if(this.options[i].is(arg)){cov_28u9ed2v2k().b[42][0]++;cov_28u9ed2v2k().s[172]++;return this.options[i];}else{cov_28u9ed2v2k().b[42][1]++;}}};/**
 * Parse options from `argv` returning `argv`
 * void of these options.
 *
 * @param {Array} argv
 * @return {Array}
 * @api public
 */cov_28u9ed2v2k().s[173]++;Command.prototype.parseOptions=function(argv){cov_28u9ed2v2k().f[22]++;var args=(cov_28u9ed2v2k().s[174]++,[]),len=(cov_28u9ed2v2k().s[175]++,argv.length),literal,option,arg;var unknownOptions=(cov_28u9ed2v2k().s[176]++,[]);var required=(cov_28u9ed2v2k().s[177]++,{});// parse options
cov_28u9ed2v2k().s[178]++;for(var i=(cov_28u9ed2v2k().s[179]++,0);i<len;++i){cov_28u9ed2v2k().s[180]++;arg=argv[i];// literal args after --
cov_28u9ed2v2k().s[181]++;if('--'==arg){cov_28u9ed2v2k().b[43][0]++;cov_28u9ed2v2k().s[182]++;literal=true;cov_28u9ed2v2k().s[183]++;continue;}else{cov_28u9ed2v2k().b[43][1]++;}cov_28u9ed2v2k().s[184]++;if(literal){cov_28u9ed2v2k().b[44][0]++;cov_28u9ed2v2k().s[185]++;args.push(arg);cov_28u9ed2v2k().s[186]++;continue;}else{cov_28u9ed2v2k().b[44][1]++;}// find matching Option
cov_28u9ed2v2k().s[187]++;option=this.optionFor(arg);// option is defined
cov_28u9ed2v2k().s[188]++;if(option){cov_28u9ed2v2k().b[45][0]++;cov_28u9ed2v2k().s[189]++;if(option.isPresenceRequired){cov_28u9ed2v2k().b[46][0]++;cov_28u9ed2v2k().s[190]++;required[option.name()]=true;}else{cov_28u9ed2v2k().b[46][1]++;}// requires arg
cov_28u9ed2v2k().s[191]++;if(option.required){cov_28u9ed2v2k().b[47][0]++;cov_28u9ed2v2k().s[192]++;arg=argv[++i];cov_28u9ed2v2k().s[193]++;if(null==arg){cov_28u9ed2v2k().b[48][0]++;cov_28u9ed2v2k().s[194]++;return this.optionMissingArgument(option);}else{cov_28u9ed2v2k().b[48][1]++;}cov_28u9ed2v2k().s[195]++;if('-'==arg[0]){cov_28u9ed2v2k().b[49][0]++;cov_28u9ed2v2k().s[196]++;return this.optionMissingArgument(option,arg);}else{cov_28u9ed2v2k().b[49][1]++;}cov_28u9ed2v2k().s[197]++;this.emit(option.name(),arg);// optional arg
}else{cov_28u9ed2v2k().b[47][1]++;cov_28u9ed2v2k().s[198]++;if(option.optional){cov_28u9ed2v2k().b[50][0]++;cov_28u9ed2v2k().s[199]++;arg=argv[i+1];cov_28u9ed2v2k().s[200]++;if((cov_28u9ed2v2k().b[52][0]++,null==arg)||(cov_28u9ed2v2k().b[52][1]++,'-'==arg[0])){cov_28u9ed2v2k().b[51][0]++;cov_28u9ed2v2k().s[201]++;arg=null;}else{cov_28u9ed2v2k().b[51][1]++;cov_28u9ed2v2k().s[202]++;++i;}cov_28u9ed2v2k().s[203]++;this.emit(option.name(),arg);// bool
}else{cov_28u9ed2v2k().b[50][1]++;cov_28u9ed2v2k().s[204]++;this.emit(option.name());}}cov_28u9ed2v2k().s[205]++;continue;}else{cov_28u9ed2v2k().b[45][1]++;}// looks like an option
cov_28u9ed2v2k().s[206]++;if((cov_28u9ed2v2k().b[54][0]++,arg.length>1)&&(cov_28u9ed2v2k().b[54][1]++,'-'==arg[0])){cov_28u9ed2v2k().b[53][0]++;cov_28u9ed2v2k().s[207]++;unknownOptions.push(arg);// If the next argument looks like it might be
// an argument for this option, we pass it on.
// If it isn't, then it'll simply be ignored
cov_28u9ed2v2k().s[208]++;if((cov_28u9ed2v2k().b[56][0]++,argv[i+1])&&(cov_28u9ed2v2k().b[56][1]++,'-'!=argv[i+1][0])){cov_28u9ed2v2k().b[55][0]++;cov_28u9ed2v2k().s[209]++;unknownOptions.push(argv[++i]);}else{cov_28u9ed2v2k().b[55][1]++;}cov_28u9ed2v2k().s[210]++;continue;}else{cov_28u9ed2v2k().b[53][1]++;}// arg
cov_28u9ed2v2k().s[211]++;args.push(arg);}cov_28u9ed2v2k().s[212]++;return{args:args,unknown:unknownOptions,required:required};};/**
 * Argument `name` is missing.
 *
 * @param {String} name
 * @api private
 */cov_28u9ed2v2k().s[213]++;Command.prototype.missingArgument=function(name){cov_28u9ed2v2k().f[23]++;cov_28u9ed2v2k().s[214]++;console.error();cov_28u9ed2v2k().s[215]++;console.error("  error: missing required argument `%s'",name);cov_28u9ed2v2k().s[216]++;console.error();cov_28u9ed2v2k().s[217]++;process.exit(1);};/**
 * `Option` is missing an argument, but received `flag` or nothing.
 *
 * @param {String} option
 * @param {String} flag
 * @api private
 */cov_28u9ed2v2k().s[218]++;Command.prototype.optionMissingArgument=function(option,flag){cov_28u9ed2v2k().f[24]++;cov_28u9ed2v2k().s[219]++;console.error();cov_28u9ed2v2k().s[220]++;if(flag){cov_28u9ed2v2k().b[57][0]++;cov_28u9ed2v2k().s[221]++;console.error("  error: option `%s' argument missing, got `%s'",option.flags,flag);}else{cov_28u9ed2v2k().b[57][1]++;cov_28u9ed2v2k().s[222]++;console.error("  error: option `%s' argument missing",option.flags);}cov_28u9ed2v2k().s[223]++;console.error();cov_28u9ed2v2k().s[224]++;process.exit(1);};/**
 * `Option` is missing.
 *
 * @param {String} option
 * @param {String} flag
 * @api private
 */cov_28u9ed2v2k().s[225]++;Command.prototype.optionMissing=function(option){cov_28u9ed2v2k().f[25]++;cov_28u9ed2v2k().s[226]++;console.error();cov_28u9ed2v2k().s[227]++;console.error("  error: option `%s' is missing",option.name());cov_28u9ed2v2k().s[228]++;console.error();cov_28u9ed2v2k().s[229]++;process.exit(1);};/**
 * Unknown option `flag`.
 *
 * @param {String} flag
 * @api private
 */cov_28u9ed2v2k().s[230]++;Command.prototype.unknownOption=function(flag){cov_28u9ed2v2k().f[26]++;cov_28u9ed2v2k().s[231]++;console.error();cov_28u9ed2v2k().s[232]++;console.error("  error: unknown option `%s'",flag);cov_28u9ed2v2k().s[233]++;console.error();cov_28u9ed2v2k().s[234]++;process.exit(1);};/**
 * Set the program version to `str`.
 *
 * This method auto-registers the "-V, --version" flag
 * which will print the version number when passed.
 *
 * @param {String} str
 * @param {String} flags
 * @return {Command} for chaining
 * @api public
 */cov_28u9ed2v2k().s[235]++;Command.prototype.version=function(str,flags){cov_28u9ed2v2k().f[27]++;cov_28u9ed2v2k().s[236]++;if(0==arguments.length){cov_28u9ed2v2k().b[58][0]++;cov_28u9ed2v2k().s[237]++;return this._version;}else{cov_28u9ed2v2k().b[58][1]++;}cov_28u9ed2v2k().s[238]++;this._version=str;cov_28u9ed2v2k().s[239]++;flags=(cov_28u9ed2v2k().b[59][0]++,flags)||(cov_28u9ed2v2k().b[59][1]++,'-V, --version');cov_28u9ed2v2k().s[240]++;this.option(flags,'output the version number');cov_28u9ed2v2k().s[241]++;this.on('version',function(){cov_28u9ed2v2k().f[28]++;cov_28u9ed2v2k().s[242]++;console.log(str);cov_28u9ed2v2k().s[243]++;process.exit(0);});cov_28u9ed2v2k().s[244]++;return this;};/**
 * Set the description `str`.
 *
 * @param {String} str
 * @return {String|Command}
 * @api public
 */cov_28u9ed2v2k().s[245]++;Command.prototype.description=function(str){cov_28u9ed2v2k().f[29]++;cov_28u9ed2v2k().s[246]++;if(0==arguments.length){cov_28u9ed2v2k().b[60][0]++;cov_28u9ed2v2k().s[247]++;return this._description;}else{cov_28u9ed2v2k().b[60][1]++;}cov_28u9ed2v2k().s[248]++;this._description=str;cov_28u9ed2v2k().s[249]++;return this;};/**
 * Set / get the command usage `str`.
 *
 * @param {String} str
 * @return {String|Command}
 * @api public
 */cov_28u9ed2v2k().s[250]++;Command.prototype.usage=function(str){cov_28u9ed2v2k().f[30]++;var args=(cov_28u9ed2v2k().s[251]++,this.args.map(function(arg){cov_28u9ed2v2k().f[31]++;cov_28u9ed2v2k().s[252]++;return arg.required?(cov_28u9ed2v2k().b[61][0]++,'<'+arg.name+'>'):(cov_28u9ed2v2k().b[61][1]++,'['+arg.name+']');}));var usage=(cov_28u9ed2v2k().s[253]++,'[options'+(this.commands.length?(cov_28u9ed2v2k().b[62][0]++,'] [command'):(cov_28u9ed2v2k().b[62][1]++,''))+']'+(this.args.length?(cov_28u9ed2v2k().b[63][0]++,' '+args):(cov_28u9ed2v2k().b[63][1]++,'')));cov_28u9ed2v2k().s[254]++;if(0==arguments.length){cov_28u9ed2v2k().b[64][0]++;cov_28u9ed2v2k().s[255]++;return(cov_28u9ed2v2k().b[65][0]++,this._usage)||(cov_28u9ed2v2k().b[65][1]++,usage);}else{cov_28u9ed2v2k().b[64][1]++;}cov_28u9ed2v2k().s[256]++;this._usage=str;cov_28u9ed2v2k().s[257]++;return this;};/**
 * Return the largest option length.
 *
 * @return {Number}
 * @api private
 */cov_28u9ed2v2k().s[258]++;Command.prototype.largestOptionLength=function(){cov_28u9ed2v2k().f[32]++;cov_28u9ed2v2k().s[259]++;return this.options.reduce(function(max,option){cov_28u9ed2v2k().f[33]++;cov_28u9ed2v2k().s[260]++;return Math.max(max,option.flags.length);},0);};/**
 * Return help for options.
 *
 * @return {String}
 * @api private
 */cov_28u9ed2v2k().s[261]++;Command.prototype.optionHelp=function(){cov_28u9ed2v2k().f[34]++;var width=(cov_28u9ed2v2k().s[262]++,this.largestOptionLength());// Prepend the help information
cov_28u9ed2v2k().s[263]++;return[pad('-h, --help',width)+'  '+'output usage information'].concat(this.options.map(function(option){cov_28u9ed2v2k().f[35]++;cov_28u9ed2v2k().s[264]++;return pad(option.flags,width)+'  '+option.description;})).join('\n');};/**
 * Return command help documentation.
 *
 * @return {String}
 * @api private
 */cov_28u9ed2v2k().s[265]++;Command.prototype.commandHelp=function(){cov_28u9ed2v2k().f[36]++;cov_28u9ed2v2k().s[266]++;if(!this.commands.length){cov_28u9ed2v2k().b[66][0]++;cov_28u9ed2v2k().s[267]++;return'';}else{cov_28u9ed2v2k().b[66][1]++;}cov_28u9ed2v2k().s[268]++;return['','  Commands:','',this.commands.map(function(cmd){cov_28u9ed2v2k().f[37]++;var args=(cov_28u9ed2v2k().s[269]++,cmd.args.map(function(arg){cov_28u9ed2v2k().f[38]++;cov_28u9ed2v2k().s[270]++;return arg.required?(cov_28u9ed2v2k().b[67][0]++,'<'+arg.name+'>'):(cov_28u9ed2v2k().b[67][1]++,'['+arg.name+']');}).join(' '));cov_28u9ed2v2k().s[271]++;return cmd.name+(cmd.options.length?(cov_28u9ed2v2k().b[68][0]++,' [options]'):(cov_28u9ed2v2k().b[68][1]++,''))+' '+args+(cmd.description()?(cov_28u9ed2v2k().b[69][0]++,'\n'+cmd.description()):(cov_28u9ed2v2k().b[69][1]++,''));}).join('\n\n').replace(/^/gm,'    '),''].join('\n');};/**
 * Return program help documentation.
 *
 * @return {String}
 * @api private
 */cov_28u9ed2v2k().s[272]++;Command.prototype.helpInformation=function(){cov_28u9ed2v2k().f[39]++;cov_28u9ed2v2k().s[273]++;return['','  Usage: '+this.name+' '+this.usage(),''+this.commandHelp(),'  Options:','',''+this.optionHelp().replace(/^/gm,'    '),'',''].join('\n');};/**
 * Prompt for a `Number`.
 *
 * @param {String} str
 * @param {Function} fn
 * @api private
 */cov_28u9ed2v2k().s[274]++;Command.prototype.promptForNumber=function(str,fn){cov_28u9ed2v2k().f[40]++;var self=(cov_28u9ed2v2k().s[275]++,this);cov_28u9ed2v2k().s[276]++;this.promptSingleLine(str,function parseNumber(val){cov_28u9ed2v2k().f[41]++;cov_28u9ed2v2k().s[277]++;val=Number(val);cov_28u9ed2v2k().s[278]++;if(isNaN(val)){cov_28u9ed2v2k().b[70][0]++;cov_28u9ed2v2k().s[279]++;return self.promptSingleLine(str+'(must be a number) ',parseNumber);}else{cov_28u9ed2v2k().b[70][1]++;}cov_28u9ed2v2k().s[280]++;fn(val);});};/**
 * Prompt for a `Date`.
 *
 * @param {String} str
 * @param {Function} fn
 * @api private
 */cov_28u9ed2v2k().s[281]++;Command.prototype.promptForDate=function(str,fn){cov_28u9ed2v2k().f[42]++;var self=(cov_28u9ed2v2k().s[282]++,this);cov_28u9ed2v2k().s[283]++;this.promptSingleLine(str,function parseDate(val){cov_28u9ed2v2k().f[43]++;cov_28u9ed2v2k().s[284]++;val=new Date(val);cov_28u9ed2v2k().s[285]++;if(isNaN(val.getTime())){cov_28u9ed2v2k().b[71][0]++;cov_28u9ed2v2k().s[286]++;return self.promptSingleLine(str+'(must be a date) ',parseDate);}else{cov_28u9ed2v2k().b[71][1]++;}cov_28u9ed2v2k().s[287]++;fn(val);});};/**
 * Single-line prompt.
 *
 * @param {String} str
 * @param {Function} fn
 * @api private
 */cov_28u9ed2v2k().s[288]++;Command.prototype.promptSingleLine=function(str,fn){cov_28u9ed2v2k().f[44]++;cov_28u9ed2v2k().s[289]++;if('function'==typeof arguments[2]){cov_28u9ed2v2k().b[72][0]++;cov_28u9ed2v2k().s[290]++;return this['promptFor'+((cov_28u9ed2v2k().b[73][0]++,fn.name)||(cov_28u9ed2v2k().b[73][1]++,fn))](str,arguments[2]);}else{cov_28u9ed2v2k().b[72][1]++;}cov_28u9ed2v2k().s[291]++;process.stdout.write(str);cov_28u9ed2v2k().s[292]++;process.stdin.setEncoding('utf8');cov_28u9ed2v2k().s[293]++;process.stdin.once('data',function(val){cov_28u9ed2v2k().f[45]++;cov_28u9ed2v2k().s[294]++;fn(val.trim());}).resume();};/**
 * Multi-line prompt.
 *
 * @param {String} str
 * @param {Function} fn
 * @api private
 */cov_28u9ed2v2k().s[295]++;Command.prototype.promptMultiLine=function(str,fn){cov_28u9ed2v2k().f[46]++;var buf=(cov_28u9ed2v2k().s[296]++,[]);cov_28u9ed2v2k().s[297]++;console.log(str);cov_28u9ed2v2k().s[298]++;process.stdin.setEncoding('utf8');cov_28u9ed2v2k().s[299]++;process.stdin.on('data',function(val){cov_28u9ed2v2k().f[47]++;cov_28u9ed2v2k().s[300]++;if((cov_28u9ed2v2k().b[75][0]++,'\n'==val)||(cov_28u9ed2v2k().b[75][1]++,'\r\n'==val)){cov_28u9ed2v2k().b[74][0]++;cov_28u9ed2v2k().s[301]++;process.stdin.removeAllListeners('data');cov_28u9ed2v2k().s[302]++;fn(buf.join('\n'));}else{cov_28u9ed2v2k().b[74][1]++;cov_28u9ed2v2k().s[303]++;buf.push(val.trimRight());}}).resume();};/**
 * Prompt `str` and callback `fn(val)`
 *
 * Commander supports single-line and multi-line prompts.
 * To issue a single-line prompt simply add white-space
 * to the end of `str`, something like "name: ", whereas
 * for a multi-line prompt omit this "description:".
 *
 *
 * Examples:
 *
 *     program.prompt('Username: ', function(name){
 *       console.log('hi %s', name);
 *     });
 *     
 *     program.prompt('Description:', function(desc){
 *       console.log('description was "%s"', desc.trim());
 *     });
 *
 * @param {String} str
 * @param {Function} fn
 * @api public
 */cov_28u9ed2v2k().s[304]++;Command.prototype.prompt=function(str,fn){cov_28u9ed2v2k().f[48]++;cov_28u9ed2v2k().s[305]++;if(/ $/.test(str)){cov_28u9ed2v2k().b[76][0]++;cov_28u9ed2v2k().s[306]++;return this.promptSingleLine.apply(this,arguments);}else{cov_28u9ed2v2k().b[76][1]++;}cov_28u9ed2v2k().s[307]++;this.promptMultiLine(str,fn);};/**
 * Prompt for password with `str`, `mask` char and callback `fn(val)`.
 *
 * The mask string defaults to '', aka no output is
 * written while typing, you may want to use "*" etc.
 *
 * Examples:
 *
 *     program.password('Password: ', function(pass){
 *       console.log('got "%s"', pass);
 *       process.stdin.destroy();
 *     });
 *
 *     program.password('Password: ', '*', function(pass){
 *       console.log('got "%s"', pass);
 *       process.stdin.destroy();
 *     });
 *
 * @param {String} str
 * @param {String} mask
 * @param {Function} fn
 * @api public
 */cov_28u9ed2v2k().s[308]++;Command.prototype.password=function(str,mask,fn){cov_28u9ed2v2k().f[49]++;var self=(cov_28u9ed2v2k().s[309]++,this),buf=(cov_28u9ed2v2k().s[310]++,'');// default mask
cov_28u9ed2v2k().s[311]++;if('function'==typeof mask){cov_28u9ed2v2k().b[77][0]++;cov_28u9ed2v2k().s[312]++;fn=mask;cov_28u9ed2v2k().s[313]++;mask='';}else{cov_28u9ed2v2k().b[77][1]++;}cov_28u9ed2v2k().s[314]++;tty.setRawMode(true);cov_28u9ed2v2k().s[315]++;process.stdout.write(str);// keypress
cov_28u9ed2v2k().s[316]++;process.stdin.on('keypress',function(c,key){cov_28u9ed2v2k().f[50]++;cov_28u9ed2v2k().s[317]++;if((cov_28u9ed2v2k().b[79][0]++,key)&&(cov_28u9ed2v2k().b[79][1]++,'enter'==key.name)){cov_28u9ed2v2k().b[78][0]++;cov_28u9ed2v2k().s[318]++;console.log();cov_28u9ed2v2k().s[319]++;process.stdin.removeAllListeners('keypress');cov_28u9ed2v2k().s[320]++;tty.setRawMode(false);cov_28u9ed2v2k().s[321]++;if(!buf.trim().length){cov_28u9ed2v2k().b[80][0]++;cov_28u9ed2v2k().s[322]++;return self.password(str,mask,fn);}else{cov_28u9ed2v2k().b[80][1]++;}cov_28u9ed2v2k().s[323]++;fn(buf);cov_28u9ed2v2k().s[324]++;return;}else{cov_28u9ed2v2k().b[78][1]++;}cov_28u9ed2v2k().s[325]++;if((cov_28u9ed2v2k().b[82][0]++,key)&&(cov_28u9ed2v2k().b[82][1]++,key.ctrl)&&(cov_28u9ed2v2k().b[82][2]++,'c'==key.name)){cov_28u9ed2v2k().b[81][0]++;cov_28u9ed2v2k().s[326]++;console.log('%s',buf);cov_28u9ed2v2k().s[327]++;process.exit();}else{cov_28u9ed2v2k().b[81][1]++;}cov_28u9ed2v2k().s[328]++;process.stdout.write(mask);cov_28u9ed2v2k().s[329]++;buf+=c;}).resume();};/**
 * Confirmation prompt with `str` and callback `fn(bool)`
 *
 * Examples:
 *
 *      program.confirm('continue? ', function(ok){
 *        console.log(' got %j', ok);
 *        process.stdin.destroy();
 *      });
 *
 * @param {String} str
 * @param {Function} fn
 * @api public
 */cov_28u9ed2v2k().s[330]++;Command.prototype.confirm=function(str,fn){cov_28u9ed2v2k().f[51]++;var self=(cov_28u9ed2v2k().s[331]++,this);cov_28u9ed2v2k().s[332]++;this.prompt(str,function(ok){cov_28u9ed2v2k().f[52]++;cov_28u9ed2v2k().s[333]++;if(!ok.trim()){cov_28u9ed2v2k().b[83][0]++;cov_28u9ed2v2k().s[334]++;return self.confirm(str,fn);}else{cov_28u9ed2v2k().b[83][1]++;}cov_28u9ed2v2k().s[335]++;fn(parseBool(ok));});};/**
 * Choice prompt with `list` of items and callback `fn(index, item)`
 *
 * Examples:
 *
 *      var list = ['tobi', 'loki', 'jane', 'manny', 'luna'];
 *      
 *      console.log('Choose the coolest pet:');
 *      program.choose(list, function(i){
 *        console.log('you chose %d "%s"', i, list[i]);
 *        process.stdin.destroy();
 *      });
 *
 * @param {Array} list
 * @param {Function} fn
 * @api public
 */cov_28u9ed2v2k().s[336]++;Command.prototype.choose=function(list,fn){cov_28u9ed2v2k().f[53]++;var self=(cov_28u9ed2v2k().s[337]++,this);cov_28u9ed2v2k().s[338]++;list.forEach(function(item,i){cov_28u9ed2v2k().f[54]++;cov_28u9ed2v2k().s[339]++;console.log('  %d) %s',i+1,item);});function again(){cov_28u9ed2v2k().f[55]++;cov_28u9ed2v2k().s[340]++;self.prompt('  : ',function(val){cov_28u9ed2v2k().f[56]++;cov_28u9ed2v2k().s[341]++;val=parseInt(val,10)-1;cov_28u9ed2v2k().s[342]++;if(null==list[val]){cov_28u9ed2v2k().b[84][0]++;cov_28u9ed2v2k().s[343]++;again();}else{cov_28u9ed2v2k().b[84][1]++;cov_28u9ed2v2k().s[344]++;fn(val,list[val]);}});}cov_28u9ed2v2k().s[345]++;again();};/**
 * Camel-case the given `flag`
 *
 * @param {String} flag
 * @return {String}
 * @api private
 */function camelcase(flag){cov_28u9ed2v2k().f[57]++;cov_28u9ed2v2k().s[346]++;return flag.split('-').reduce(function(str,word){cov_28u9ed2v2k().f[58]++;cov_28u9ed2v2k().s[347]++;return str+word[0].toUpperCase()+word.slice(1);});}/**
 * Parse a boolean `str`.
 *
 * @param {String} str
 * @return {Boolean}
 * @api private
 */function parseBool(str){cov_28u9ed2v2k().f[59]++;cov_28u9ed2v2k().s[348]++;return /^y|yes|ok|true$/i.test(str);}/**
 * Pad `str` to `width`.
 *
 * @param {String} str
 * @param {Number} width
 * @return {String}
 * @api private
 */function pad(str,width){cov_28u9ed2v2k().f[60]++;var len=(cov_28u9ed2v2k().s[349]++,Math.max(0,width-str.length));cov_28u9ed2v2k().s[350]++;return str+Array(len+1).join(' ');}/**
 * Output help information if necessary
 *
 * @param {Command} command to output help for
 * @param {Array} array of options to search for -h or --help
 * @api private
 */function outputHelpIfNecessary(cmd,options){cov_28u9ed2v2k().f[61]++;cov_28u9ed2v2k().s[351]++;options=(cov_28u9ed2v2k().b[85][0]++,options)||(cov_28u9ed2v2k().b[85][1]++,[]);cov_28u9ed2v2k().s[352]++;for(var i=(cov_28u9ed2v2k().s[353]++,0);i<options.length;i++){cov_28u9ed2v2k().s[354]++;if((cov_28u9ed2v2k().b[87][0]++,options[i]=='--help')||(cov_28u9ed2v2k().b[87][1]++,options[i]=='-h')){cov_28u9ed2v2k().b[86][0]++;cov_28u9ed2v2k().s[355]++;process.on('exit',function(){cov_28u9ed2v2k().f[62]++;cov_28u9ed2v2k().s[356]++;consoleFlush(cmd.helpInformation());cov_28u9ed2v2k().s[357]++;cmd.emit('--help');cov_28u9ed2v2k().s[358]++;consoleFlush("");});cov_28u9ed2v2k().s[359]++;process.exit();}else{cov_28u9ed2v2k().b[86][1]++;}cov_28u9ed2v2k().s[360]++;return true;}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,