function cov_gas21a9sd(){var path="/Users/abhis/Documents/python/splunk-sdk-javascript/examples/node/helloworld/search_blocking.js";var hash="98ad4ad901acc506f24b80d0cdbe0e44178577d5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/abhis/Documents/python/splunk-sdk-javascript/examples/node/helloworld/search_blocking.js",statementMap:{"0":{start:{line:20,column:15},end:{line:20,column:40}},"1":{start:{line:21,column:13},end:{line:21,column:27}},"2":{start:{line:23,column:0},end:{line:95,column:2}},"3":{start:{line:25,column:4},end:{line:25,column:22}},"4":{start:{line:27,column:19},end:{line:27,column:46}},"5":{start:{line:28,column:19},end:{line:28,column:49}},"6":{start:{line:29,column:19},end:{line:29,column:46}},"7":{start:{line:30,column:19},end:{line:30,column:50}},"8":{start:{line:31,column:19},end:{line:31,column:45}},"9":{start:{line:32,column:19},end:{line:32,column:48}},"10":{start:{line:34,column:18},end:{line:41,column:6}},"11":{start:{line:43,column:4},end:{line:94,column:6}},"12":{start:{line:46,column:16},end:{line:46,column:36}},"13":{start:{line:50,column:16},end:{line:52,column:17}},"14":{start:{line:51,column:20},end:{line:51,column:45}},"15":{start:{line:54,column:16},end:{line:54,column:97}},"16":{start:{line:58,column:16},end:{line:58,column:32}},"17":{start:{line:63,column:16},end:{line:63,column:48}},"18":{start:{line:64,column:16},end:{line:64,column:77}},"19":{start:{line:65,column:16},end:{line:65,column:86}},"20":{start:{line:66,column:16},end:{line:66,column:72}},"21":{start:{line:69,column:16},end:{line:69,column:38}},"22":{start:{line:74,column:31},end:{line:74,column:61}},"23":{start:{line:75,column:38},end:{line:75,column:74}},"24":{start:{line:76,column:32},end:{line:76,column:62}},"25":{start:{line:79,column:16},end:{line:79,column:41}},"26":{start:{line:80,column:16},end:{line:85,column:17}},"27":{start:{line:80,column:28},end:{line:80,column:29}},"28":{start:{line:81,column:20},end:{line:81,column:56}},"29":{start:{line:82,column:20},end:{line:82,column:87}},"30":{start:{line:83,column:20},end:{line:83,column:75}},"31":{start:{line:84,column:20},end:{line:84,column:74}},"32":{start:{line:88,column:16},end:{line:88,column:33}},"33":{start:{line:92,column:12},end:{line:92,column:26}},"34":{start:{line:97,column:0},end:{line:99,column:1}},"35":{start:{line:98,column:4},end:{line:98,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:15},end:{line:23,column:16}},loc:{start:{line:23,column:40},end:{line:95,column:1}},line:23},"1":{name:"(anonymous_1)",decl:{start:{line:45,column:12},end:{line:45,column:13}},loc:{start:{line:45,column:27},end:{line:47,column:13}},line:45},"2":{name:"(anonymous_2)",decl:{start:{line:49,column:12},end:{line:49,column:13}},loc:{start:{line:49,column:36},end:{line:55,column:13}},line:49},"3":{name:"(anonymous_3)",decl:{start:{line:57,column:12},end:{line:57,column:13}},loc:{start:{line:57,column:32},end:{line:59,column:13}},line:57},"4":{name:"(anonymous_4)",decl:{start:{line:61,column:12},end:{line:61,column:13}},loc:{start:{line:61,column:32},end:{line:70,column:13}},line:61},"5":{name:"(anonymous_5)",decl:{start:{line:72,column:12},end:{line:72,column:13}},loc:{start:{line:72,column:41},end:{line:89,column:13}},line:72},"6":{name:"(anonymous_6)",decl:{start:{line:91,column:8},end:{line:91,column:9}},loc:{start:{line:91,column:22},end:{line:93,column:9}},line:91},"7":{name:"(anonymous_7)",decl:{start:{line:98,column:21},end:{line:98,column:22}},loc:{start:{line:98,column:32},end:{line:98,column:34}},line:98}},branchMap:{"0":{loc:{start:{line:25,column:11},end:{line:25,column:21}},type:"binary-expr",locations:[{start:{line:25,column:11},end:{line:25,column:15}},{start:{line:25,column:19},end:{line:25,column:21}}],line:25},"1":{loc:{start:{line:27,column:19},end:{line:27,column:46}},type:"binary-expr",locations:[{start:{line:27,column:19},end:{line:27,column:32}},{start:{line:27,column:39},end:{line:27,column:46}}],line:27},"2":{loc:{start:{line:28,column:19},end:{line:28,column:49}},type:"binary-expr",locations:[{start:{line:28,column:19},end:{line:28,column:32}},{start:{line:28,column:39},end:{line:28,column:49}}],line:28},"3":{loc:{start:{line:29,column:19},end:{line:29,column:46}},type:"binary-expr",locations:[{start:{line:29,column:19},end:{line:29,column:30}},{start:{line:29,column:39},end:{line:29,column:46}}],line:29},"4":{loc:{start:{line:30,column:19},end:{line:30,column:50}},type:"binary-expr",locations:[{start:{line:30,column:19},end:{line:30,column:28}},{start:{line:30,column:39},end:{line:30,column:50}}],line:30},"5":{loc:{start:{line:31,column:19},end:{line:31,column:45}},type:"binary-expr",locations:[{start:{line:31,column:19},end:{line:31,column:28}},{start:{line:31,column:39},end:{line:31,column:45}}],line:31},"6":{loc:{start:{line:32,column:19},end:{line:32,column:48}},type:"binary-expr",locations:[{start:{line:32,column:19},end:{line:32,column:31}},{start:{line:32,column:39},end:{line:32,column:48}}],line:32},"7":{loc:{start:{line:50,column:16},end:{line:52,column:17}},type:"if",locations:[{start:{line:50,column:16},end:{line:52,column:17}},{start:{line:50,column:16},end:{line:52,column:17}}],line:50},"8":{loc:{start:{line:97,column:0},end:{line:99,column:1}},type:"if",locations:[{start:{line:97,column:0},end:{line:99,column:1}},{start:{line:97,column:0},end:{line:99,column:1}}],line:97}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"98ad4ad901acc506f24b80d0cdbe0e44178577d5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_gas21a9sd=function(){return actualCoverage;};}return actualCoverage;}cov_gas21a9sd();// Copyright 2011 Splunk, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"): you may
// not use this file except in compliance with the License. You may obtain
// a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
// This example will login to Splunk, perform a blocking search, and then print 
// out the raw results and some key-value pairs. A blocking search is one that 
// won't return until the search is complete.
var splunkjs=(cov_gas21a9sd().s[0]++,require('../../../index'));var Async=(cov_gas21a9sd().s[1]++,splunkjs.Async);cov_gas21a9sd().s[2]++;exports.main=function(opts,callback){cov_gas21a9sd().f[0]++;cov_gas21a9sd().s[3]++;// This is just for testing - ignore it
opts=(cov_gas21a9sd().b[0][0]++,opts)||(cov_gas21a9sd().b[0][1]++,{});var username=(cov_gas21a9sd().s[4]++,(cov_gas21a9sd().b[1][0]++,opts.username)||(cov_gas21a9sd().b[1][1]++,"admin"));var password=(cov_gas21a9sd().s[5]++,(cov_gas21a9sd().b[2][0]++,opts.password)||(cov_gas21a9sd().b[2][1]++,"changed!"));var scheme=(cov_gas21a9sd().s[6]++,(cov_gas21a9sd().b[3][0]++,opts.scheme)||(cov_gas21a9sd().b[3][1]++,"https"));var host=(cov_gas21a9sd().s[7]++,(cov_gas21a9sd().b[4][0]++,opts.host)||(cov_gas21a9sd().b[4][1]++,"localhost"));var port=(cov_gas21a9sd().s[8]++,(cov_gas21a9sd().b[5][0]++,opts.port)||(cov_gas21a9sd().b[5][1]++,"8089"));var version=(cov_gas21a9sd().s[9]++,(cov_gas21a9sd().b[6][0]++,opts.version)||(cov_gas21a9sd().b[6][1]++,"default"));var service=(cov_gas21a9sd().s[10]++,new splunkjs.Service({username:username,password:password,scheme:scheme,host:host,port:port,version:version}));cov_gas21a9sd().s[11]++;Async.chain([// First, we log in
function(done){cov_gas21a9sd().f[1]++;cov_gas21a9sd().s[12]++;service.login(done);},// Perform the search
function(success,done){cov_gas21a9sd().f[2]++;cov_gas21a9sd().s[13]++;if(!success){cov_gas21a9sd().b[7][0]++;cov_gas21a9sd().s[14]++;done("Error logging in");}else{cov_gas21a9sd().b[7][1]++;}cov_gas21a9sd().s[15]++;service.search("search index=_internal | head 3",{exec_mode:"blocking"},done);},// The job is done, but let's some statistics from the server.
function(job,done){cov_gas21a9sd().f[3]++;cov_gas21a9sd().s[16]++;job.fetch(done);},// Print out the statistics and get the results
function(job,done){cov_gas21a9sd().f[4]++;cov_gas21a9sd().s[17]++;// Print out the statics
console.log("Job Statistics: ");cov_gas21a9sd().s[18]++;console.log("  Event Count: "+job.properties().eventCount);cov_gas21a9sd().s[19]++;console.log("  Disk Usage: "+job.properties().diskUsage+" bytes");cov_gas21a9sd().s[20]++;console.log("  Priority: "+job.properties().priority);// Ask the server for the results
cov_gas21a9sd().s[21]++;job.results({},done);},// Print the raw results out
function(results,job,done){cov_gas21a9sd().f[5]++;// Find the index of the fields we want
var rawIndex=(cov_gas21a9sd().s[22]++,results.fields.indexOf("_raw"));var sourcetypeIndex=(cov_gas21a9sd().s[23]++,results.fields.indexOf("sourcetype"));var userIndex=(cov_gas21a9sd().s[24]++,results.fields.indexOf("user"));// Print out each result and the key-value pairs we want
cov_gas21a9sd().s[25]++;console.log("Results: ");cov_gas21a9sd().s[26]++;for(var i=(cov_gas21a9sd().s[27]++,0);i<results.rows.length;i++){cov_gas21a9sd().s[28]++;console.log("  Result "+i+": ");cov_gas21a9sd().s[29]++;console.log("    sourcetype: "+results.rows[i][sourcetypeIndex]);cov_gas21a9sd().s[30]++;console.log("    user: "+results.rows[i][userIndex]);cov_gas21a9sd().s[31]++;console.log("    _raw: "+results.rows[i][rawIndex]);}// Once we're done, cancel the job.
cov_gas21a9sd().s[32]++;job.cancel(done);}],function(err){cov_gas21a9sd().f[6]++;cov_gas21a9sd().s[33]++;callback(err);});};cov_gas21a9sd().s[34]++;if(module===require.main){cov_gas21a9sd().b[8][0]++;cov_gas21a9sd().s[35]++;exports.main({},function(){cov_gas21a9sd().f[7]++;});}else{cov_gas21a9sd().b[8][1]++;}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,