function cov_1wy2t2moo(){var path="/Users/abhis/Documents/python/splunk-sdk-javascript/examples/node/helloworld/search_realtime.js";var hash="69b87940aa443926f5b87caf997ed417409e9b9c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/abhis/Documents/python/splunk-sdk-javascript/examples/node/helloworld/search_realtime.js",statementMap:{"0":{start:{line:20,column:15},end:{line:20,column:40}},"1":{start:{line:21,column:13},end:{line:21,column:27}},"2":{start:{line:23,column:0},end:{line:115,column:2}},"3":{start:{line:25,column:4},end:{line:25,column:22}},"4":{start:{line:27,column:19},end:{line:27,column:46}},"5":{start:{line:28,column:19},end:{line:28,column:49}},"6":{start:{line:29,column:19},end:{line:29,column:46}},"7":{start:{line:30,column:19},end:{line:30,column:50}},"8":{start:{line:31,column:19},end:{line:31,column:45}},"9":{start:{line:32,column:19},end:{line:32,column:48}},"10":{start:{line:34,column:18},end:{line:41,column:6}},"11":{start:{line:43,column:4},end:{line:114,column:6}},"12":{start:{line:46,column:16},end:{line:46,column:36}},"13":{start:{line:50,column:16},end:{line:52,column:17}},"14":{start:{line:51,column:20},end:{line:51,column:45}},"15":{start:{line:54,column:16},end:{line:57,column:26}},"16":{start:{line:62,column:32},end:{line:62,column:33}},"17":{start:{line:63,column:28},end:{line:63,column:29}},"18":{start:{line:65,column:16},end:{line:108,column:18}},"19":{start:{line:67,column:33},end:{line:67,column:58}},"20":{start:{line:70,column:24},end:{line:102,column:27}},"21":{start:{line:71,column:28},end:{line:101,column:31}},"22":{start:{line:72,column:32},end:{line:75,column:33}},"23":{start:{line:73,column:36},end:{line:73,column:55}},"24":{start:{line:74,column:36},end:{line:74,column:43}},"25":{start:{line:78,column:32},end:{line:97,column:33}},"26":{start:{line:80,column:36},end:{line:80,column:44}},"27":{start:{line:82,column:36},end:{line:82,column:97}},"28":{start:{line:83,column:58},end:{line:83,column:94}},"29":{start:{line:84,column:53},end:{line:84,column:84}},"30":{start:{line:86,column:36},end:{line:94,column:37}},"31":{start:{line:86,column:48},end:{line:86,column:49}},"32":{start:{line:87,column:50},end:{line:87,column:65}},"33":{start:{line:90,column:51},end:{line:90,column:123}},"34":{start:{line:93,column:40},end:{line:93,column:76}},"35":{start:{line:96,column:36},end:{line:96,column:85}},"36":{start:{line:100,column:32},end:{line:100,column:48}},"37":{start:{line:106,column:24},end:{line:106,column:41}},"38":{start:{line:112,column:12},end:{line:112,column:26}},"39":{start:{line:117,column:0},end:{line:119,column:1}},"40":{start:{line:118,column:4},end:{line:118,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:15},end:{line:23,column:16}},loc:{start:{line:23,column:40},end:{line:115,column:1}},line:23},"1":{name:"(anonymous_1)",decl:{start:{line:45,column:12},end:{line:45,column:13}},loc:{start:{line:45,column:27},end:{line:47,column:13}},line:45},"2":{name:"(anonymous_2)",decl:{start:{line:49,column:12},end:{line:49,column:13}},loc:{start:{line:49,column:36},end:{line:58,column:13}},line:49},"3":{name:"(anonymous_3)",decl:{start:{line:61,column:12},end:{line:61,column:13}},loc:{start:{line:61,column:32},end:{line:109,column:13}},line:61},"4":{name:"(anonymous_4)",decl:{start:{line:67,column:20},end:{line:67,column:21}},loc:{start:{line:67,column:31},end:{line:67,column:60}},line:67},"5":{name:"(anonymous_5)",decl:{start:{line:69,column:20},end:{line:69,column:21}},loc:{start:{line:69,column:44},end:{line:103,column:21}},line:69},"6":{name:"(anonymous_6)",decl:{start:{line:70,column:42},end:{line:70,column:43}},loc:{start:{line:70,column:53},end:{line:102,column:25}},line:70},"7":{name:"(anonymous_7)",decl:{start:{line:71,column:44},end:{line:71,column:45}},loc:{start:{line:71,column:67},end:{line:101,column:29}},line:71},"8":{name:"(anonymous_8)",decl:{start:{line:105,column:20},end:{line:105,column:21}},loc:{start:{line:105,column:34},end:{line:107,column:21}},line:105},"9":{name:"(anonymous_9)",decl:{start:{line:111,column:8},end:{line:111,column:9}},loc:{start:{line:111,column:22},end:{line:113,column:9}},line:111},"10":{name:"(anonymous_10)",decl:{start:{line:118,column:21},end:{line:118,column:22}},loc:{start:{line:118,column:32},end:{line:118,column:34}},line:118}},branchMap:{"0":{loc:{start:{line:25,column:11},end:{line:25,column:21}},type:"binary-expr",locations:[{start:{line:25,column:11},end:{line:25,column:15}},{start:{line:25,column:19},end:{line:25,column:21}}],line:25},"1":{loc:{start:{line:27,column:19},end:{line:27,column:46}},type:"binary-expr",locations:[{start:{line:27,column:19},end:{line:27,column:32}},{start:{line:27,column:39},end:{line:27,column:46}}],line:27},"2":{loc:{start:{line:28,column:19},end:{line:28,column:49}},type:"binary-expr",locations:[{start:{line:28,column:19},end:{line:28,column:32}},{start:{line:28,column:39},end:{line:28,column:49}}],line:28},"3":{loc:{start:{line:29,column:19},end:{line:29,column:46}},type:"binary-expr",locations:[{start:{line:29,column:19},end:{line:29,column:30}},{start:{line:29,column:39},end:{line:29,column:46}}],line:29},"4":{loc:{start:{line:30,column:19},end:{line:30,column:50}},type:"binary-expr",locations:[{start:{line:30,column:19},end:{line:30,column:28}},{start:{line:30,column:39},end:{line:30,column:50}}],line:30},"5":{loc:{start:{line:31,column:19},end:{line:31,column:45}},type:"binary-expr",locations:[{start:{line:31,column:19},end:{line:31,column:28}},{start:{line:31,column:39},end:{line:31,column:45}}],line:31},"6":{loc:{start:{line:32,column:19},end:{line:32,column:48}},type:"binary-expr",locations:[{start:{line:32,column:19},end:{line:32,column:31}},{start:{line:32,column:39},end:{line:32,column:48}}],line:32},"7":{loc:{start:{line:50,column:16},end:{line:52,column:17}},type:"if",locations:[{start:{line:50,column:16},end:{line:52,column:17}},{start:{line:50,column:16},end:{line:52,column:17}}],line:50},"8":{loc:{start:{line:72,column:32},end:{line:75,column:33}},type:"if",locations:[{start:{line:72,column:32},end:{line:75,column:33}},{start:{line:72,column:32},end:{line:75,column:33}}],line:72},"9":{loc:{start:{line:78,column:32},end:{line:97,column:33}},type:"if",locations:[{start:{line:78,column:32},end:{line:97,column:33}},{start:{line:78,column:32},end:{line:97,column:33}}],line:78},"10":{loc:{start:{line:78,column:36},end:{line:78,column:59}},type:"binary-expr",locations:[{start:{line:78,column:36},end:{line:78,column:43}},{start:{line:78,column:47},end:{line:78,column:59}}],line:78},"11":{loc:{start:{line:117,column:0},end:{line:119,column:1}},type:"if",locations:[{start:{line:117,column:0},end:{line:119,column:1}},{start:{line:117,column:0},end:{line:119,column:1}}],line:117}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"69b87940aa443926f5b87caf997ed417409e9b9c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1wy2t2moo=function(){return actualCoverage;};}return actualCoverage;}cov_1wy2t2moo();// Copyright 2011 Splunk, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"): you may
// not use this file except in compliance with the License. You may obtain
// a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
// This example will login to Splunk and perform a realtime search that counts
// how many events of each sourcetype we have seen. It will then print out
// this information every 1 second for a set number of iterations.
var splunkjs=(cov_1wy2t2moo().s[0]++,require('../../../index'));var Async=(cov_1wy2t2moo().s[1]++,splunkjs.Async);cov_1wy2t2moo().s[2]++;exports.main=function(opts,callback){cov_1wy2t2moo().f[0]++;cov_1wy2t2moo().s[3]++;// This is just for testing - ignore it
opts=(cov_1wy2t2moo().b[0][0]++,opts)||(cov_1wy2t2moo().b[0][1]++,{});var username=(cov_1wy2t2moo().s[4]++,(cov_1wy2t2moo().b[1][0]++,opts.username)||(cov_1wy2t2moo().b[1][1]++,"admin"));var password=(cov_1wy2t2moo().s[5]++,(cov_1wy2t2moo().b[2][0]++,opts.password)||(cov_1wy2t2moo().b[2][1]++,"changed!"));var scheme=(cov_1wy2t2moo().s[6]++,(cov_1wy2t2moo().b[3][0]++,opts.scheme)||(cov_1wy2t2moo().b[3][1]++,"https"));var host=(cov_1wy2t2moo().s[7]++,(cov_1wy2t2moo().b[4][0]++,opts.host)||(cov_1wy2t2moo().b[4][1]++,"localhost"));var port=(cov_1wy2t2moo().s[8]++,(cov_1wy2t2moo().b[5][0]++,opts.port)||(cov_1wy2t2moo().b[5][1]++,"8089"));var version=(cov_1wy2t2moo().s[9]++,(cov_1wy2t2moo().b[6][0]++,opts.version)||(cov_1wy2t2moo().b[6][1]++,"default"));var service=(cov_1wy2t2moo().s[10]++,new splunkjs.Service({username:username,password:password,scheme:scheme,host:host,port:port,version:version}));cov_1wy2t2moo().s[11]++;Async.chain([// First, we log in
function(done){cov_1wy2t2moo().f[1]++;cov_1wy2t2moo().s[12]++;service.login(done);},// Perform the search
function(success,done){cov_1wy2t2moo().f[2]++;cov_1wy2t2moo().s[13]++;if(!success){cov_1wy2t2moo().b[7][0]++;cov_1wy2t2moo().s[14]++;done("Error logging in");}else{cov_1wy2t2moo().b[7][1]++;}cov_1wy2t2moo().s[15]++;service.search("search index=_internal | stats count by sourcetype",{earliest_time:"rt",latest_time:"rt"},done);},// The search is never going to be done, so we simply poll it every second to get
// more results
function(job,done){cov_1wy2t2moo().f[3]++;var MAX_COUNT=(cov_1wy2t2moo().s[16]++,5);var count=(cov_1wy2t2moo().s[17]++,0);cov_1wy2t2moo().s[18]++;Async.whilst(// Loop for N times
function(){cov_1wy2t2moo().f[4]++;cov_1wy2t2moo().s[19]++;return MAX_COUNT>count;},// Every second, ask for preview results
function(iterationDone){cov_1wy2t2moo().f[5]++;cov_1wy2t2moo().s[20]++;Async.sleep(1000,function(){cov_1wy2t2moo().f[6]++;cov_1wy2t2moo().s[21]++;job.preview({},function(err,results){cov_1wy2t2moo().f[7]++;cov_1wy2t2moo().s[22]++;if(err){cov_1wy2t2moo().b[8][0]++;cov_1wy2t2moo().s[23]++;iterationDone(err);cov_1wy2t2moo().s[24]++;return;}else{cov_1wy2t2moo().b[8][1]++;}// Only do something if we have results
cov_1wy2t2moo().s[25]++;if((cov_1wy2t2moo().b[10][0]++,results)&&(cov_1wy2t2moo().b[10][1]++,results.rows)){cov_1wy2t2moo().b[9][0]++;cov_1wy2t2moo().s[26]++;// Up the iteration counter
count++;cov_1wy2t2moo().s[27]++;console.log("========== Iteration "+count+" ==========");var sourcetypeIndex=(cov_1wy2t2moo().s[28]++,results.fields.indexOf("sourcetype"));var countIndex=(cov_1wy2t2moo().s[29]++,results.fields.indexOf("count"));cov_1wy2t2moo().s[30]++;for(var i=(cov_1wy2t2moo().s[31]++,0);i<results.rows.length;i++){var row=(cov_1wy2t2moo().s[32]++,results.rows[i]);// This is a hacky "padding" solution
var stat=(cov_1wy2t2moo().s[33]++,("  "+row[sourcetypeIndex]+"                         ").slice(0,30));// Print out the sourcetype and the count of the sourcetype so far
cov_1wy2t2moo().s[34]++;console.log(stat+row[countIndex]);}cov_1wy2t2moo().s[35]++;console.log("=================================");}else{cov_1wy2t2moo().b[9][1]++;}// And we're done with this iteration
cov_1wy2t2moo().s[36]++;iterationDone();});});},// When we're done looping, just cancel the job
function(err){cov_1wy2t2moo().f[8]++;cov_1wy2t2moo().s[37]++;job.cancel(done);});}],function(err){cov_1wy2t2moo().f[9]++;cov_1wy2t2moo().s[38]++;callback(err);});};cov_1wy2t2moo().s[39]++;if(module===require.main){cov_1wy2t2moo().b[11][0]++;cov_1wy2t2moo().s[40]++;exports.main({},function(){cov_1wy2t2moo().f[10]++;});}else{cov_1wy2t2moo().b[11][1]++;}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,