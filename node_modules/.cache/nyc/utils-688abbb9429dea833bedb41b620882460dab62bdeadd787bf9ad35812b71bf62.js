function cov_169c0kc675(){var path="/Users/abhis/Documents/python/splunk-sdk-javascript/lib/modularinputs/utils.js";var hash="66c00723f7e9b220f320b71ef3712f1c6e6c1521";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/abhis/Documents/python/splunk-sdk-javascript/lib/modularinputs/utils.js",statementMap:{"0":{start:{line:16,column:14},end:{line:16,column:33}},"1":{start:{line:51,column:0},end:{line:66,column:2}},"2":{start:{line:52,column:4},end:{line:65,column:5}},"3":{start:{line:54,column:12},end:{line:54,column:34}},"4":{start:{line:56,column:29},end:{line:56,column:31}},"5":{start:{line:57,column:32},end:{line:57,column:55}},"6":{start:{line:58,column:12},end:{line:61,column:13}},"7":{start:{line:58,column:25},end:{line:58,column:26}},"8":{start:{line:59,column:26},end:{line:59,column:42}},"9":{start:{line:60,column:16},end:{line:60,column:42}},"10":{start:{line:62,column:12},end:{line:62,column:30}},"11":{start:{line:64,column:12},end:{line:64,column:101}},"12":{start:{line:76,column:0},end:{line:96,column:2}},"13":{start:{line:77,column:15},end:{line:77,column:17}},"14":{start:{line:78,column:19},end:{line:78,column:43}},"15":{start:{line:79,column:4},end:{line:94,column:5}},"16":{start:{line:79,column:17},end:{line:79,column:18}},"17":{start:{line:80,column:20},end:{line:80,column:31}},"18":{start:{line:81,column:8},end:{line:93,column:9}},"19":{start:{line:82,column:12},end:{line:89,column:13}},"20":{start:{line:83,column:16},end:{line:83,column:45}},"21":{start:{line:84,column:37},end:{line:84,column:56}},"22":{start:{line:85,column:16},end:{line:88,column:17}},"23":{start:{line:85,column:29},end:{line:85,column:30}},"24":{start:{line:86,column:32},end:{line:86,column:49}},"25":{start:{line:87,column:20},end:{line:87,column:94}},"26":{start:{line:91,column:13},end:{line:93,column:9}},"27":{start:{line:92,column:12},end:{line:92,column:67}},"28":{start:{line:95,column:4},end:{line:95,column:16}},"29":{start:{line:98,column:0},end:{line:98,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:51,column:24},end:{line:51,column:25}},loc:{start:{line:51,column:44},end:{line:66,column:1}},line:51},"1":{name:"(anonymous_1)",decl:{start:{line:76,column:21},end:{line:76,column:22}},loc:{start:{line:76,column:56},end:{line:96,column:1}},line:76}},branchMap:{"0":{loc:{start:{line:52,column:4},end:{line:65,column:5}},type:"switch",locations:[{start:{line:53,column:8},end:{line:54,column:34}},{start:{line:55,column:8},end:{line:62,column:30}},{start:{line:63,column:8},end:{line:64,column:101}}],line:52},"1":{loc:{start:{line:81,column:8},end:{line:93,column:9}},type:"if",locations:[{start:{line:81,column:8},end:{line:93,column:9}},{start:{line:81,column:8},end:{line:93,column:9}}],line:81},"2":{loc:{start:{line:82,column:12},end:{line:89,column:13}},type:"if",locations:[{start:{line:82,column:12},end:{line:89,column:13}},{start:{line:82,column:12},end:{line:89,column:13}}],line:82},"3":{loc:{start:{line:91,column:13},end:{line:93,column:9}},type:"if",locations:[{start:{line:91,column:13},end:{line:93,column:9}},{start:{line:91,column:13},end:{line:93,column:9}}],line:91}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"66c00723f7e9b220f320b71ef3712f1c6e6c1521"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_169c0kc675=function(){return actualCoverage;};}return actualCoverage;}cov_169c0kc675();/*!*/ // Copyright 2014 Splunk, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"): you may
// not use this file except in compliance with the License. You may obtain
// a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
var utils=(cov_169c0kc675().s[0]++,require('../utils'));// Get all of the existing utils
/**
 * Parse the parameters from an `InputDefinition` or `ValidationDefinition`.
 *
 * This is a helper function for `parseXMLData`.
 *
 * The XML typically will look like this:
 * 
 *   `<configuration>`
 *     `<stanza name="foobar://aaa">`
 *       `<param name="param1">value1</param>`
 *       `<param name="param2">value2</param>`
 *       `<param name="disabled">0</param>`
 *       `<param name="index">default</param>`
 *     `</stanza>`
 *     `<stanza name="foobar://bbb">`
 *       `<param name="param1">value11</param>`
 *       `<param name="param2">value22</param>`
 *       `<param name="disabled">0</param>`
 *       `<param name="index">default</param>`
 *       `<param_list name="multiValue">`
 *         `<value>value1</value>`
 *         `<value>value2</value>`
 *       `</param_list>`
 *       `<param_list name="multiValue2">`
 *         `<value>value3</value>`
 *         `<value>value4</value>`
 *       `</param_list>`
 *     `</stanza>`
 *   `</configuration>`
 *
 * @param {Object} an `Elementree` object representing the `<configuration>` XML node.
 * @return {Object} an `Elementree` object representing the parameters of node passed in.
 */cov_169c0kc675().s[1]++;utils.parseParameters=function(paramNode){cov_169c0kc675().f[0]++;cov_169c0kc675().s[2]++;switch(paramNode.tag){case"param":cov_169c0kc675().b[0][0]++;cov_169c0kc675().s[3]++;return paramNode.text;case"param_list":cov_169c0kc675().b[0][1]++;var parameters=(cov_169c0kc675().s[4]++,[]);var paramChildren=(cov_169c0kc675().s[5]++,paramNode.getchildren());cov_169c0kc675().s[6]++;for(var i=(cov_169c0kc675().s[7]++,0);i<paramChildren.length;i++){var mvp=(cov_169c0kc675().s[8]++,paramChildren[i]);cov_169c0kc675().s[9]++;parameters.push(mvp.text);}cov_169c0kc675().s[10]++;return parameters;default:cov_169c0kc675().b[0][2]++;cov_169c0kc675().s[11]++;throw new Error("Invalid configuration scheme, <"+paramNode.tag+"> tag unexpected.");}};/**
 * Parses the parameters from `Elementtree` representations of XML for
 * `InputDefinition` and `ValidationDefinition` objects.
 *
 * @param {Object} a parent `Elementtree` element object.
 * @param {String} the name of the child element to parse parameters from.
 * @return {Object} an object of the parameters parsed.
 */cov_169c0kc675().s[12]++;utils.parseXMLData=function(parentNode,childNodeTag){cov_169c0kc675().f[1]++;var data=(cov_169c0kc675().s[13]++,{});var children=(cov_169c0kc675().s[14]++,parentNode.getchildren());cov_169c0kc675().s[15]++;for(var i=(cov_169c0kc675().s[16]++,0);i<children.length;i++){var child=(cov_169c0kc675().s[17]++,children[i]);cov_169c0kc675().s[18]++;if(child.tag===childNodeTag){cov_169c0kc675().b[1][0]++;cov_169c0kc675().s[19]++;if(childNodeTag==="stanza"){cov_169c0kc675().b[2][0]++;cov_169c0kc675().s[20]++;data[child.get("name")]={};var stanzaChildren=(cov_169c0kc675().s[21]++,child.getchildren());cov_169c0kc675().s[22]++;for(var p=(cov_169c0kc675().s[23]++,0);p<stanzaChildren.length;p++){var param=(cov_169c0kc675().s[24]++,stanzaChildren[p]);cov_169c0kc675().s[25]++;data[child.get("name")][param.get("name")]=utils.parseParameters(param);}}else{cov_169c0kc675().b[2][1]++;}}else{cov_169c0kc675().b[1][1]++;cov_169c0kc675().s[26]++;if("item"===parentNode.tag){cov_169c0kc675().b[3][0]++;cov_169c0kc675().s[27]++;data[child.get("name")]=utils.parseParameters(child);}else{cov_169c0kc675().b[3][1]++;}}}cov_169c0kc675().s[28]++;return data;};cov_169c0kc675().s[29]++;module.exports=utils;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,